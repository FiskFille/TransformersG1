package fiskfille.tfg1.client.model.transformer;

import static fiskfille.tf.common.data.TFPredicates.isBacking;
import static fiskfille.tf.common.data.TFPredicates.isSneaking;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.util.MathHelper;

import org.lwjgl.opengl.GL11;

import fiskfille.tf.client.model.AnimationModifier;
import fiskfille.tf.client.model.AnimationModifier.Type;
import fiskfille.tf.client.model.tools.ModelRendererTF;
import fiskfille.tf.client.model.transformer.ModelTransformerBase;
import fiskfille.tf.common.transformer.base.Transformer;
import fiskfille.tf.helper.ModelOffset;
import fiskfille.tf.helper.TFModelHelper;
import fiskfille.tf.helper.TFRenderHelper;
import fiskfille.tfg1.G1TransformerManager;

public class ModelStarscream extends ModelTransformerBase
{
    public ModelRendererTF waist;
    public ModelRendererTF frontCrotch;
    public ModelRendererTF backCrotch;
    public ModelRendererTF rightHip1;
    public ModelRendererTF leftHip1;
    public ModelRendererTF torso;
    public ModelRendererTF canopy1;
    public ModelRendererTF upperLeg1;
    public ModelRendererTF upperLeg2;
    public ModelRendererTF spine;
    public ModelRendererTF rightHip2;
    public ModelRendererTF rightHip3;
    public ModelRendererTF leftHip2;
    public ModelRendererTF leftHip3;
    public ModelRendererTF rightTorsoSide;
    public ModelRendererTF leftTorsoSide;
    public ModelRendererTF rightChest1;
    public ModelRendererTF leftChest1;
    public ModelRendererTF neck;
    public ModelRendererTF rightChest2;
    public ModelRendererTF rightChest7;
    public ModelRendererTF rightWing1;
    public ModelRendererTF rightArmConnector;
    public ModelRendererTF rightChest3;
    public ModelRendererTF rightChest5;
    public ModelRendererTF rightChest4;
    public ModelRendererTF rightChest6;
    public ModelRendererTF rightChest8;
    public ModelRendererTF rightChest9;
    public ModelRendererTF rightWing2;
    public ModelRendererTF rightWing9;
    public ModelRendererTF rightWing13;
    public ModelRendererTF rightWing3;
    public ModelRendererTF rightWing4;
    public ModelRendererTF rightWing5;
    public ModelRendererTF rightWing6;
    public ModelRendererTF rightWing7;
    public ModelRendererTF rightWing8;
    public ModelRendererTF rightWing10;
    public ModelRendererTF rightWing11;
    public ModelRendererTF rightWing12;
    public ModelRendererTF rightWing14;
    public ModelRendererTF rightWing15;
    public ModelRendererTF rightWing16;
    public ModelRendererTF rightArm1;
    public ModelRendererTF rightArm2;
    public ModelRendererTF rightArm5;
    public ModelRendererTF rightGun1;
    public ModelRendererTF rightArm3;
    public ModelRendererTF rightArm4;
    public ModelRendererTF rightGun2;
    public ModelRendererTF rightGun3;
    public ModelRendererTF rightGun4;
    public ModelRendererTF rightGun7;
    public ModelRendererTF rightGun5;
    public ModelRendererTF rightGun6;
    public ModelRendererTF rightGun8;
    public ModelRendererTF rightGun9;
    public ModelRendererTF rightGun10;
    public ModelRendererTF rightGun11;
    public ModelRendererTF leftChest2;
    public ModelRendererTF leftChest7;
    public ModelRendererTF leftWing1;
    public ModelRendererTF leftArmConnector;
    public ModelRendererTF leftChest3;
    public ModelRendererTF leftChest5;
    public ModelRendererTF leftChest4;
    public ModelRendererTF leftChest6;
    public ModelRendererTF leftChest8;
    public ModelRendererTF leftChest9;
    public ModelRendererTF leftWing2;
    public ModelRendererTF leftWing9;
    public ModelRendererTF leftWing13;
    public ModelRendererTF leftWing3;
    public ModelRendererTF leftWing4;
    public ModelRendererTF leftWing5;
    public ModelRendererTF leftWing6;
    public ModelRendererTF leftWing7;
    public ModelRendererTF leftWing8;
    public ModelRendererTF leftWing10;
    public ModelRendererTF leftWing11;
    public ModelRendererTF leftWing12;
    public ModelRendererTF leftWing14;
    public ModelRendererTF leftWing15;
    public ModelRendererTF leftWing16;
    public ModelRendererTF leftArm1;
    public ModelRendererTF leftArm2;
    public ModelRendererTF leftArm5;
    public ModelRendererTF leftGun1;
    public ModelRendererTF leftArm3;
    public ModelRendererTF leftArm4;
    public ModelRendererTF leftGun2;
    public ModelRendererTF leftGun3;
    public ModelRendererTF leftGun4;
    public ModelRendererTF leftGun7;
    public ModelRendererTF leftGun5;
    public ModelRendererTF leftGun6;
    public ModelRendererTF leftGun8;
    public ModelRendererTF leftGun9;
    public ModelRendererTF leftGun10;
    public ModelRendererTF leftGun11;
    public ModelRendererTF headConnector;
    public ModelRendererTF head;
    public ModelRendererTF headPiece1;
    public ModelRendererTF chin;
    public ModelRendererTF rightHelmet1;
    public ModelRendererTF rightHelmet1_1;
    public ModelRendererTF nose1;
    public ModelRendererTF headPiece2;
    public ModelRendererTF headPiece3;
    public ModelRendererTF headPiece4;
    public ModelRendererTF headPiece5;
    public ModelRendererTF rightHelmet2;
    public ModelRendererTF rightHelmet3;
    public ModelRendererTF rightHelmet7;
    public ModelRendererTF rightHelmet8;
    public ModelRendererTF rightHelmet4;
    public ModelRendererTF rightHelmet5;
    public ModelRendererTF rightHelmet6;
    public ModelRendererTF rightHelmet9;
    public ModelRendererTF rightHelmet2_1;
    public ModelRendererTF rightHelmet3_1;
    public ModelRendererTF rightHelmet7_1;
    public ModelRendererTF rightHelmet8_1;
    public ModelRendererTF rightHelmet4_1;
    public ModelRendererTF rightHelmet5_1;
    public ModelRendererTF rightHelmet6_1;
    public ModelRendererTF rightHelmet9_1;
    public ModelRendererTF nose2;
    public ModelRendererTF canopy2;
    public ModelRendererTF canopy3;
    public ModelRendererTF canopy6;
    public ModelRendererTF canopy20;
    public ModelRendererTF canopy4;
    public ModelRendererTF canopy5;
    public ModelRendererTF canopy7;
    public ModelRendererTF canopy12;
    public ModelRendererTF canopy14;
    public ModelRendererTF canopy16;
    public ModelRendererTF canopy18;
    public ModelRendererTF canopy8;
    public ModelRendererTF canopy11;
    public ModelRendererTF canopy9;
    public ModelRendererTF canopy10;
    public ModelRendererTF canopy13;
    public ModelRendererTF canopy15;
    public ModelRendererTF canopy17;
    public ModelRendererTF canopy19;
    public ModelRendererTF backUpperLeg1;
    public ModelRendererTF lowerLeg1;
    public ModelRendererTF upperBackLeg1;
    public ModelRendererTF lowerBackLeg1;
    public ModelRendererTF footThruster1;
    public ModelRendererTF rightKnee1;
    public ModelRendererTF rightLowerLeg1;
    public ModelRendererTF leftLowerLeg1;
    public ModelRendererTF lowerLegPanel1;
    public ModelRendererTF footBase1;
    public ModelRendererTF rightFin1_1;
    public ModelRendererTF rightFin2_1;
    public ModelRendererTF rightFin1_2;
    public ModelRendererTF rightFin1_5;
    public ModelRendererTF rightFin1_3;
    public ModelRendererTF rightFin1_4;
    public ModelRendererTF rightFin1_6;
    public ModelRendererTF rightFin1_7;
    public ModelRendererTF rightFin1_8;
    public ModelRendererTF rightFin1_9;
    public ModelRendererTF rightFin1_10;
    public ModelRendererTF rightFin2_2;
    public ModelRendererTF rightFin2_5;
    public ModelRendererTF rightFin2_3;
    public ModelRendererTF rightFin2_4;
    public ModelRendererTF rightFin2_6;
    public ModelRendererTF rightFin2_7;
    public ModelRendererTF rightFin2_8;
    public ModelRendererTF rightFin2_9;
    public ModelRendererTF rightFin2_10;
    public ModelRendererTF rightKnee2;
    public ModelRendererTF rightKnee3;
    public ModelRendererTF upperFoot1;
    public ModelRendererTF lowerFoot1;
    public ModelRendererTF backUpperLeg2;
    public ModelRendererTF lowerLeg2;
    public ModelRendererTF upperBackLeg2;
    public ModelRendererTF lowerBackLeg2;
    public ModelRendererTF footThruster2;
    public ModelRendererTF leftKnee1;
    public ModelRendererTF rightLowerLeg2;
    public ModelRendererTF leftLowerLeg2;
    public ModelRendererTF lowerLegPanel2;
    public ModelRendererTF footBase2;
    public ModelRendererTF leftFin1_1;
    public ModelRendererTF leftFin2_1;
    public ModelRendererTF leftFin1_2;
    public ModelRendererTF leftFin1_5;
    public ModelRendererTF leftFin1_3;
    public ModelRendererTF leftFin1_4;
    public ModelRendererTF leftFin1_6;
    public ModelRendererTF leftFin1_7;
    public ModelRendererTF leftFin1_8;
    public ModelRendererTF leftFin1_9;
    public ModelRendererTF leftFin1_10;
    public ModelRendererTF leftFin2_2;
    public ModelRendererTF leftFin2_5;
    public ModelRendererTF leftFin2_3;
    public ModelRendererTF leftFin2_4;
    public ModelRendererTF leftFin2_6;
    public ModelRendererTF leftFin2_7;
    public ModelRendererTF leftFin2_8;
    public ModelRendererTF leftFin2_9;
    public ModelRendererTF leftFin2_10;
    public ModelRendererTF leftKnee2;
    public ModelRendererTF leftKnee3;
    public ModelRendererTF upperFoot2;
    public ModelRendererTF lowerFoot2;

    public ModelStarscream()
    {
        super(1, 0.8F, new AnimationModifier(Type.DEGREE, isBacking(), 0.5F), new AnimationModifier(Type.SPEED, isSneaking(), 1.5F));
        textureWidth = 64;
        textureHeight = 64;
        headPiece2 = new ModelRendererTF(this, 32, 27);
        headPiece2.setRotationPoint(0, -1, 1);
        headPiece2.addBox(-0.5F, 0, 0, 1, 1, 1, 0);
        setRotateAngle(headPiece2, -0.3839724354387525F, 0, 0);
        leftWing1 = new ModelRendererTF(this, 60, 31);
        leftWing1.mirror = true;
        leftWing1.setRotationPoint(0.9F, -0.7F, 2);
        leftWing1.addBox(0, -2, -0.5F, 1, 11, 1, 0);
        leftWing7 = new ModelRendererTF(this, 54, 60);
        leftWing7.mirror = true;
        leftWing7.setRotationPoint(0, 1, 0);
        leftWing7.addBox(0, 0, -0.5F, 2, 1, 1, 0);
        rightFin2_5 = new ModelRendererTF(this, 3, 51);
        rightFin2_5.setRotationPoint(0, -0.5F, 0);
        rightFin2_5.addBox(-0.5F, -1, 0, 1, 1, 5, 0);
        canopy9 = new ModelRendererTF(this, 50, 24);
        canopy9.setRotationPoint(0, 0, 0);
        canopy9.addBox(-0.15F, 0, -0.35F, 1, 1, 1, 0);
        rightLowerLeg1 = new ModelRendererTF(this, 0, 12);
        rightLowerLeg1.setRotationPoint(-1.3F, 0.1F, 0);
        rightLowerLeg1.addBox(-0.5F, 0, -1.5F, 1, 8, 3, 0);
        setRotateAngle(rightLowerLeg1, 0.06981317007977318F, 0, 0.03490658503988659F);
        rightWing13 = new ModelRendererTF(this, 60, 51);
        rightWing13.setRotationPoint(-1, 9, -0.1F);
        rightWing13.addBox(0, -12, -0.5F, 1, 12, 1, 0);
        setRotateAngle(rightWing13, 0, 0, -0.7853981633974483F);
        leftChest4 = new ModelRendererTF(this, 12, 34);
        leftChest4.mirror = true;
        leftChest4.setRotationPoint(0, -2, 0);
        leftChest4.addBox(-1, -2, -1, 2, 2, 1, 0);
        setRotateAngle(leftChest4, 0.3490658503988659F, 0, 0);
        rightFin2_10 = new ModelRendererTF(this, 13, 37);
        rightFin2_10.setRotationPoint(0, 0.1F, 0);
        rightFin2_10.addBox(-0.5F, -1, 0, 1, 1, 1, 0);
        leftArmConnector = new ModelRendererTF(this, 21, 23);
        leftArmConnector.mirror = true;
        leftArmConnector.setRotationPoint(1.5F, -1, 0);
        leftArmConnector.addBox(0, -1, -1, 1, 3, 2, 0);
        headPiece5 = new ModelRendererTF(this, 40, 27);
        headPiece5.setRotationPoint(0, 0, 2);
        headPiece5.addBox(-0.5F, 0, 0, 1, 1, 1, 0);
        setRotateAngle(headPiece5, -0.5410520681182421F, 0, 0);
        leftWing16 = new ModelRendererTF(this, 60, 43);
        leftWing16.mirror = true;
        leftWing16.setRotationPoint(-2, 1, 0);
        leftWing16.addBox(0, 0, -0.5F, 1, 4, 1, 0);
        setRotateAngle(leftWing16, 0, 0, -1.064650843716541F);
        canopy18 = new ModelRendererTF(this, 50, 19);
        canopy18.mirror = true;
        canopy18.setRotationPoint(1.5F, 0, 1);
        canopy18.addBox(-1, 0, 0, 2, 4, 1, 0);
        setRotateAngle(canopy18, 0.08726646259971647F, -1.5707963267948966F, 0);
        leftFin1_9 = new ModelRendererTF(this, 0, 60);
        leftFin1_9.mirror = true;
        leftFin1_9.setRotationPoint(0, 0.1F, 0);
        leftFin1_9.addBox(-0.5F, -1, 0, 1, 1, 2, 0);
        leftHip1 = new ModelRendererTF(this, 34, 6);
        leftHip1.mirror = true;
        leftHip1.setRotationPoint(1, -0.7F, 0);
        leftHip1.addBox(-0.7000000000000002F, -1, -1.5F, 3, 2, 3, 0);
        rightWing15 = new ModelRendererTF(this, 54, 45);
        rightWing15.setRotationPoint(0, -2, 0);
        rightWing15.addBox(0, 0, -0.5F, 2, 1, 1, 0);
        setRotateAngle(rightWing15, 0, 0, -1.064650843716541F);
        canopy14 = new ModelRendererTF(this, 50, 19);
        canopy14.mirror = true;
        canopy14.setRotationPoint(0, 0, 2.5F);
        canopy14.addBox(-1, 0, 0, 2, 4, 1, 0);
        setRotateAngle(canopy14, 0.08726646259971647F, -3.141592653589793F, 0);
        canopy1 = new ModelRendererTF(this, 0, 36);
        canopy1.setRotationPoint(0, -7.9F, -1.3F);
        canopy1.addBox(-1, 0, -1.5F, 2, 8, 3, 0);
        setRotateAngle(canopy1, 0.05235987755982988F, 0, 0);
        rightHelmet5 = new ModelRendererTF(this, 22, 40);
        rightHelmet5.setRotationPoint(0, -1, 1);
        rightHelmet5.addBox(-0.5F, 0, 0, 1, 1, 1, 0);
        setRotateAngle(rightHelmet5, -0.40142572795869574F, 0, 0);
        leftFin1_3 = new ModelRendererTF(this, 0, 47);
        leftFin1_3.mirror = true;
        leftFin1_3.setRotationPoint(0, -6.5F, 0);
        leftFin1_3.addBox(-0.5F, 0, -1, 1, 8, 1, 0);
        canopy15 = new ModelRendererTF(this, 56, 19);
        canopy15.mirror = true;
        canopy15.setRotationPoint(0, 4, 0);
        canopy15.addBox(-0.5F, 0, 0, 1, 4, 1, 0);
        setRotateAngle(canopy15, 0.0767944870877505F, 0, 0);
        backUpperLeg2 = new ModelRendererTF(this, 22, 0);
        backUpperLeg2.mirror = true;
        backUpperLeg2.setRotationPoint(0, 3, 0.25F);
        backUpperLeg2.addBox(-1, -3, 0, 2, 6, 1, 0);
        canopy4 = new ModelRendererTF(this, 10, 27);
        canopy4.setRotationPoint(0, 2, 0);
        canopy4.addBox(-1, 0, 0, 2, 3, 1, 0);
        setRotateAngle(canopy4, 0.3490658503988659F, 0, 0);
        leftGun1 = new ModelRendererTF(this, 46, 19);
        leftGun1.mirror = true;
        leftGun1.setRotationPoint(3, 1.5F, 0);
        leftGun1.addBox(0, -1, -0.5F, 1, 2, 1, 0);
        rightHelmet7_1 = new ModelRendererTF(this, 28, 32);
        rightHelmet7_1.mirror = true;
        rightHelmet7_1.setRotationPoint(0.3F, 0.1F, -0.2F);
        rightHelmet7_1.addBox(0, -1.5F, -0.5F, 1, 2, 2, 0);
        chin = new ModelRendererTF(this, 25, 32);
        chin.setRotationPoint(0, -1, -1.4F);
        chin.addBox(-0.5F, 0, 0, 1, 1, 1, 0);
        setRotateAngle(chin, -0.3839724354387525F, 0, 0);
        rightWing3 = new ModelRendererTF(this, 46, 52);
        rightWing3.setRotationPoint(0, 3, 0);
        rightWing3.addBox(-6, 0, -0.5F, 6, 1, 1, 0);
        leftGun2 = new ModelRendererTF(this, 60, 26);
        leftGun2.mirror = true;
        leftGun2.setRotationPoint(0.3F, 0, 0);
        leftGun2.addBox(0.8F, -2.5F, -0.8F, 1, 4, 1, 0);
        leftLowerLeg1 = new ModelRendererTF(this, 0, 12);
        leftLowerLeg1.mirror = true;
        leftLowerLeg1.setRotationPoint(1.3F, 0.1F, 0);
        leftLowerLeg1.addBox(-0.5F, 0, -1.5F, 1, 8, 3, 0);
        setRotateAngle(leftLowerLeg1, 0.06981317007977318F, 0, -0.03490658503988659F);
        leftFin1_10 = new ModelRendererTF(this, 0, 58);
        leftFin1_10.mirror = true;
        leftFin1_10.setRotationPoint(0, 0.1F, 0);
        leftFin1_10.addBox(-0.5F, -1, 0, 1, 1, 1, 0);
        rightGun1 = new ModelRendererTF(this, 46, 19);
        rightGun1.setRotationPoint(-3, 1.5F, 0);
        rightGun1.addBox(-1, -1, -0.5F, 1, 2, 1, 0);
        footBase2 = new ModelRendererTF(this, 18, 11);
        footBase2.mirror = true;
        footBase2.setRotationPoint(0, 8.2F, 0);
        footBase2.addBox(-1.5F, 0, -3, 3, 1, 2, 0);
        setRotateAngle(footBase2, -0.10471975511965977F, 0, 0.017453292519943295F);
        upperLeg1 = new ModelRendererTF(this, 12, 0);
        upperLeg1.setRotationPoint(-2, 0.3F, 0);
        upperLeg1.addBox(-1.5F, 0, -1.25F, 3, 6, 2, 0);
        setRotateAngle(upperLeg1, -0.13962634015954636F, 0.08726646259971647F, 0.10471975511965977F);
        leftWing13 = new ModelRendererTF(this, 60, 51);
        leftWing13.mirror = true;
        leftWing13.setRotationPoint(1, 9, -0.1F);
        leftWing13.addBox(-1, -12, -0.5F, 1, 12, 1, 0);
        setRotateAngle(leftWing13, 0, 0, 0.7853981633974483F);
        rightHip3 = new ModelRendererTF(this, 27, 10);
        rightHip3.setRotationPoint(-1, -1.02F, 1.4F);
        rightHip3.addBox(-1, 0, -0.5F, 2, 2, 1, 0);
        setRotateAngle(rightHip3, -0.10471975511965977F, 0, 0);
        rightChest6 = new ModelRendererTF(this, 15, 30);
        rightChest6.setRotationPoint(0, -4, -2);
        rightChest6.addBox(-1, -1, 0, 2, 1, 1, 0);
        rightFin1_8 = new ModelRendererTF(this, 22, 59);
        rightFin1_8.setRotationPoint(0, 0.1F, 0);
        rightFin1_8.addBox(-0.5F, -1, 0, 1, 1, 3, 0);
        rightFin1_10 = new ModelRendererTF(this, 0, 58);
        rightFin1_10.setRotationPoint(0, 0.1F, 0);
        rightFin1_10.addBox(-0.5F, -1, 0, 1, 1, 1, 0);
        lowerFoot2 = new ModelRendererTF(this, 8, 13);
        lowerFoot2.mirror = true;
        lowerFoot2.setRotationPoint(0, 0.55F, -1.22F);
        lowerFoot2.addBox(-1.5F, -0.5F, 0, 3, 1, 3, 0);
        setRotateAngle(lowerFoot2, 0.45378560551852565F, 0, 0);
        canopy17 = new ModelRendererTF(this, 56, 19);
        canopy17.setRotationPoint(0, 4, 0);
        canopy17.addBox(-0.5F, 0, 0, 1, 4, 1, 0);
        setRotateAngle(canopy17, 0.0767944870877505F, 0, 0);
        rightWing14 = new ModelRendererTF(this, 54, 33);
        rightWing14.setRotationPoint(0, -12, 0);
        rightWing14.addBox(0, -2, -0.5F, 2, 2, 1, 0);
        setRotateAngle(rightWing14, 0, 0, 0.7853981633974483F);
        headPiece4 = new ModelRendererTF(this, 26, 29);
        headPiece4.setRotationPoint(0, 0, 1);
        headPiece4.addBox(-0.5F, 0, 0, 1, 1, 2, 0);
        setRotateAngle(headPiece4, -0.8552113334772213F, 0, 0);
        rightChest3 = new ModelRendererTF(this, 16, 27);
        rightChest3.setRotationPoint(0, -2, 0);
        rightChest3.addBox(-1, -2, -1, 2, 2, 1, 0);
        setRotateAngle(rightChest3, 0.3490658503988659F, 0, 0);
        neck = new ModelRendererTF(this, 20, 28);
        neck.setRotationPoint(0, -7.8F, 0.5F);
        neck.addBox(-1, -1, -2, 2, 1, 2, 0);
        setRotateAngle(neck, 0.17453292519943295F, 0, 0);
        rightGun6 = new ModelRendererTF(this, 60, 26);
        rightGun6.setRotationPoint(0, 0, 0);
        rightGun6.addBox(-0.8F, -2.5F, -0.2F, 1, 4, 1, 0);
        leftFin1_2 = new ModelRendererTF(this, 4, 47);
        leftFin1_2.mirror = true;
        leftFin1_2.setRotationPoint(0, 0, 0);
        leftFin1_2.addBox(-0.5F, -6.5F, -1, 1, 7, 1, 0);
        setRotateAngle(leftFin1_2, -1.5707963267948966F, 0, 0);
        rightHelmet6 = new ModelRendererTF(this, 30, 29);
        rightHelmet6.setRotationPoint(0, 0, 1);
        rightHelmet6.addBox(-0.5F, 0, 0, 1, 1, 1, 0);
        setRotateAngle(rightHelmet6, -0.8726646259971648F, 0, 0);
        leftArm3 = new ModelRendererTF(this, 48, 11);
        leftArm3.mirror = true;
        leftArm3.setRotationPoint(0, 1.3F, 0);
        leftArm3.addBox(-1.5F, 0, -1.5F, 3, 5, 3, 0);
        setRotateAngle(leftArm3, -0.20943951023931953F, 0, 0.06981317007977318F);
        rightFin2_1 = new ModelRendererTF(this, 0, 57);
        rightFin2_1.setRotationPoint(0, 0.7F, -0.5F);
        rightFin2_1.addBox(-0.5F, -0.5F, 0, 1, 1, 6, 0);
        setRotateAngle(rightFin2_1, 1.5707963267948966F, 0, 0);
        leftFin1_8 = new ModelRendererTF(this, 22, 59);
        leftFin1_8.mirror = true;
        leftFin1_8.setRotationPoint(0, 0.1F, 0);
        leftFin1_8.addBox(-0.5F, -1, 0, 1, 1, 3, 0);
        headConnector = new ModelRendererTF(this, 0, 0);
        headConnector.setRotationPoint(0, 0, 0);
        headConnector.addBox(0, 0, 0, 0, 0, 0, 0);
        setRotateAngle(headConnector, -0.17453292519943295F, 0, 0);
        leftFin1_1 = new ModelRendererTF(this, 0, 57);
        leftFin1_1.mirror = true;
        leftFin1_1.setRotationPoint(0, 0.7F, -0.5F);
        leftFin1_1.addBox(-0.5F, -0.5F, 0, 1, 1, 6, 0);
        setRotateAngle(leftFin1_1, 1.5707963267948966F, 0, 0);
        leftFin2_7 = new ModelRendererTF(this, 10, 51);
        leftFin2_7.mirror = true;
        leftFin2_7.setRotationPoint(0, 0, 0);
        leftFin2_7.addBox(-0.5F, -1, 0, 1, 1, 4, 0);
        leftWing15 = new ModelRendererTF(this, 54, 45);
        leftWing15.mirror = true;
        leftWing15.setRotationPoint(0, -2, 0);
        leftWing15.addBox(-2, 0, -0.5F, 2, 1, 1, 0);
        setRotateAngle(leftWing15, 0, 0, 1.064650843716541F);
        canopy10 = new ModelRendererTF(this, 50, 24);
        canopy10.setRotationPoint(0, 0, 0);
        canopy10.addBox(-0.85F, 0, -0.35F, 1, 1, 1, 0);
        rightArm2 = new ModelRendererTF(this, 34, 18);
        rightArm2.setRotationPoint(-1.5F, 2.5F, 0);
        rightArm2.addBox(-1, 0, -1, 2, 2, 2, 0);
        leftWing11 = new ModelRendererTF(this, 54, 45);
        leftWing11.mirror = true;
        leftWing11.setRotationPoint(0, -2, 0);
        leftWing11.addBox(-2, 0, -0.5F, 2, 1, 1, 0);
        setRotateAngle(leftWing11, 0, 0, 1.064650843716541F);
        upperFoot1 = new ModelRendererTF(this, 8, 17);
        upperFoot1.setRotationPoint(0, 0.46F, -2.77F);
        upperFoot1.addBox(-1.5F, -0.5F, 0, 3, 1, 3, 0);
        setRotateAngle(upperFoot1, 0.45378560551852565F, 0, 0);
        upperBackLeg2 = new ModelRendererTF(this, 12, 8);
        upperBackLeg2.mirror = true;
        upperBackLeg2.setRotationPoint(0, 0.12F, 1.02F);
        upperBackLeg2.addBox(-1.5F, 0, -0.5F, 3, 4, 1, 0);
        setRotateAngle(upperBackLeg2, 0.24434609527920614F, 0, 0);
        lowerLegPanel2 = new ModelRendererTF(this, 5, 11);
        lowerLegPanel2.mirror = true;
        lowerLegPanel2.setRotationPoint(0, 4.8F, -0.7F);
        lowerLegPanel2.addBox(-1, -1.5F, -1, 2, 3, 1, 0);
        rightHelmet2_1 = new ModelRendererTF(this, 17, 37);
        rightHelmet2_1.mirror = true;
        rightHelmet2_1.setRotationPoint(0.3F, 0.5F, -0.8F);
        rightHelmet2_1.addBox(-0.5F, -1, -1, 1, 2, 1, 0);
        canopy8 = new ModelRendererTF(this, 50, 24);
        canopy8.setRotationPoint(0, 0, 0);
        canopy8.addBox(-0.15F, 0, -0.85F, 1, 1, 1, 0);
        leftFin2_4 = new ModelRendererTF(this, 16, 32);
        leftFin2_4.mirror = true;
        leftFin2_4.setRotationPoint(0, 8, 0);
        leftFin2_4.addBox(-0.5F, 0, -1, 1, 1, 1, 0);
        setRotateAngle(leftFin2_4, -0.8464846872172498F, 0, 0);
        canopy16 = new ModelRendererTF(this, 50, 19);
        canopy16.setRotationPoint(-1.5F, 0, 1);
        canopy16.addBox(-1, 0, 0, 2, 4, 1, 0);
        setRotateAngle(canopy16, 0.08726646259971647F, 1.5707963267948966F, 0);
        leftWing6 = new ModelRendererTF(this, 52, 58);
        leftWing6.mirror = true;
        leftWing6.setRotationPoint(0, 1, 0);
        leftWing6.addBox(0, 0, -0.5F, 3, 1, 1, 0);
        leftChest9 = new ModelRendererTF(this, 14, 25);
        leftChest9.mirror = true;
        leftChest9.setRotationPoint(0, 2, 0);
        leftChest9.addBox(-1, 0, 0, 2, 1, 1, 0);
        setRotateAngle(leftChest9, 0.6981317007977318F, 0, 0);
        lowerLeg1 = new ModelRendererTF(this, 0, 0);
        lowerLeg1.setRotationPoint(0, 5.7F, -0.1F);
        lowerLeg1.addBox(-1.5F, 0, -1.5F, 3, 8, 3, 0);
        setRotateAngle(lowerLeg1, 0.24434609527920614F, 0.05235987755982988F, -0.06981317007977318F);
        leftArm2 = new ModelRendererTF(this, 34, 18);
        leftArm2.mirror = true;
        leftArm2.setRotationPoint(1.5F, 2.5F, 0);
        leftArm2.addBox(-1, 0, -1, 2, 2, 2, 0);
        rightFin2_8 = new ModelRendererTF(this, 22, 53);
        rightFin2_8.setRotationPoint(0, 0.1F, 0);
        rightFin2_8.addBox(-0.5F, -1, 0, 1, 1, 3, 0);
        rightWing5 = new ModelRendererTF(this, 50, 56);
        rightWing5.setRotationPoint(0, 1, 0);
        rightWing5.addBox(-4, 0, -0.5F, 4, 1, 1, 0);
        leftFin2_8 = new ModelRendererTF(this, 22, 53);
        leftFin2_8.mirror = true;
        leftFin2_8.setRotationPoint(0, 0.1F, 0);
        leftFin2_8.addBox(-0.5F, -1, 0, 1, 1, 3, 0);
        leftChest6 = new ModelRendererTF(this, 15, 30);
        leftChest6.mirror = true;
        leftChest6.setRotationPoint(0, -4, -2);
        leftChest6.addBox(-1, -1, 0, 2, 1, 1, 0);
        rightFin2_7 = new ModelRendererTF(this, 10, 51);
        rightFin2_7.setRotationPoint(0, 0, 0);
        rightFin2_7.addBox(-0.5F, -1, 0, 1, 1, 4, 0);
        backCrotch = new ModelRendererTF(this, 28, 6);
        backCrotch.setRotationPoint(0, -1.04F, 1.32F);
        backCrotch.addBox(-1, 0, -0.5F, 2, 3, 1, 0);
        setRotateAngle(backCrotch, -0.10471975511965977F, 0, 0);
        rightChest2 = new ModelRendererTF(this, 7, 36);
        rightChest2.setRotationPoint(-1.5F, -2.5F, 2);
        rightChest2.addBox(-1, -2, -1, 2, 2, 1, 0);
        rightFin1_6 = new ModelRendererTF(this, 8, 57);
        rightFin1_6.setRotationPoint(0, 0.6F, 0);
        rightFin1_6.addBox(-0.5F, -1, 0, 1, 1, 5, 0);
        rightHelmet2 = new ModelRendererTF(this, 17, 37);
        rightHelmet2.setRotationPoint(-0.3F, 0.5F, -0.8F);
        rightHelmet2.addBox(-0.5F, -1, -1, 1, 2, 1, 0);
        rightGun11 = new ModelRendererTF(this, 45, 11);
        rightGun11.setRotationPoint(0, 0, 0);
        rightGun11.addBox(-0.7F, -1, -0.3F, 1, 2, 1, 0);
        canopy11 = new ModelRendererTF(this, 57, 30);
        canopy11.setRotationPoint(0, 2.99F, 0);
        canopy11.addBox(-0.5F, 0, -0.5F, 1, 1, 1, 0);
        rightHelmet8_1 = new ModelRendererTF(this, 33, 30);
        rightHelmet8_1.mirror = true;
        rightHelmet8_1.setRotationPoint(0.9F, -0.3F, 0.8F);
        rightHelmet8_1.addBox(-1, -1.5F, 0, 1, 3, 1, 0);
        setRotateAngle(rightHelmet8_1, 0, -0.45378560551852565F, 0);
        frontCrotch = new ModelRendererTF(this, 28, 6);
        frontCrotch.setRotationPoint(0, -1.04F, -1.32F);
        frontCrotch.addBox(-1, 0, -0.5F, 2, 3, 1, 0);
        setRotateAngle(frontCrotch, 0.10471975511965977F, 0, 0);
        canopy2 = new ModelRendererTF(this, 0, 26);
        canopy2.setRotationPoint(0, 0, 0);
        canopy2.addBox(-1.5F, 0, -1, 3, 8, 2, 0);
        lowerBackLeg1 = new ModelRendererTF(this, 20, 14);
        lowerBackLeg1.setRotationPoint(0, 5.87F, 1.47F);
        lowerBackLeg1.addBox(-1.5F, -2, 0, 3, 4, 1, 0);
        rightHip1 = new ModelRendererTF(this, 34, 6);
        rightHip1.setRotationPoint(-1, -0.7F, 0);
        rightHip1.addBox(-2.3F, -1, -1.5F, 3, 2, 3, 0);
        canopy13 = new ModelRendererTF(this, 56, 19);
        canopy13.setRotationPoint(0, 4, 0);
        canopy13.addBox(-0.5F, 0, 0, 1, 4, 1, 0);
        setRotateAngle(canopy13, 0.0767944870877505F, 0, 0);
        leftLowerLeg2 = new ModelRendererTF(this, 0, 12);
        leftLowerLeg2.setRotationPoint(1.3F, 0.1F, 0);
        leftLowerLeg2.addBox(-0.5F, 0, -1.5F, 1, 8, 3, 0);
        setRotateAngle(leftLowerLeg2, 0.06981317007977318F, 0, -0.03490658503988659F);
        rightChest8 = new ModelRendererTF(this, 10, 31);
        rightChest8.setRotationPoint(0, 1, 0);
        rightChest8.addBox(-1, 0, 0, 2, 2, 1, 0);
        setRotateAngle(rightChest8, 0.6981317007977318F, 0, 0);
        canopy5 = new ModelRendererTF(this, 16, 22);
        canopy5.setRotationPoint(0, 3, 0);
        canopy5.addBox(-1, 0, 0, 2, 2, 1, 0);
        setRotateAngle(canopy5, 0.3490658503988659F, 0, 0);
        leftFin2_1 = new ModelRendererTF(this, 0, 57);
        leftFin2_1.mirror = true;
        leftFin2_1.setRotationPoint(0, 0.7F, -0.5F);
        leftFin2_1.addBox(-0.5F, -0.5F, 0, 1, 1, 6, 0);
        setRotateAngle(leftFin2_1, 1.5707963267948966F, 0, 0);
        rightWing10 = new ModelRendererTF(this, 54, 33);
        rightWing10.setRotationPoint(0, -12, 0);
        rightWing10.addBox(0, -2, -0.5F, 2, 2, 1, 0);
        setRotateAngle(rightWing10, 0, 0, 0.7853981633974483F);
        rightGun4 = new ModelRendererTF(this, 60, 26);
        rightGun4.setRotationPoint(-1, 0, 0);
        rightGun4.addBox(-0.2F, -2.5F, -0.8F, 1, 4, 1, 0);
        rightGun8 = new ModelRendererTF(this, 45, 11);
        rightGun8.setRotationPoint(0, 3.5F, 0);
        rightGun8.addBox(-0.7F, -1, -0.7F, 1, 2, 1, 0);
        canopy20 = new ModelRendererTF(this, 25, 23);
        canopy20.setRotationPoint(0, 8, -1.5F);
        canopy20.addBox(-1, 0, 0, 2, 1, 1, 0);
        setRotateAngle(canopy20, 0.6981317007977318F, 0, 0);
        rightArm3 = new ModelRendererTF(this, 48, 11);
        rightArm3.setRotationPoint(0, 1.3F, 0);
        rightArm3.addBox(-1.5F, 0, -1.5F, 3, 5, 3, 0);
        setRotateAngle(rightArm3, -0.20943951023931953F, 0, -0.06981317007977318F);
        leftWing2 = new ModelRendererTF(this, 44, 47);
        leftWing2.mirror = true;
        leftWing2.setRotationPoint(1, -1, 0);
        leftWing2.addBox(0, -1, -0.5F, 7, 4, 1, 0);
        rightFin2_4 = new ModelRendererTF(this, 16, 32);
        rightFin2_4.setRotationPoint(0, 8, 0);
        rightFin2_4.addBox(-0.5F, 0, -1, 1, 1, 1, 0);
        setRotateAngle(rightFin2_4, -0.8464846872172498F, 0, 0);
        leftFin2_9 = new ModelRendererTF(this, 28, 56);
        leftFin2_9.mirror = true;
        leftFin2_9.setRotationPoint(0, 0.1F, 0);
        leftFin2_9.addBox(-0.5F, -1, 0, 1, 1, 2, 0);
        leftFin2_5 = new ModelRendererTF(this, 3, 51);
        leftFin2_5.mirror = true;
        leftFin2_5.setRotationPoint(0, -0.5F, 0);
        leftFin2_5.addBox(-0.5F, -1, 0, 1, 1, 5, 0);
        torso = new ModelRendererTF(this, 46, 0);
        torso.setRotationPoint(0, -1, 0);
        torso.addBox(-3, -8, -1.5F, 6, 8, 3, 0);
        leftChest5 = new ModelRendererTF(this, 28, 13);
        leftChest5.mirror = true;
        leftChest5.setRotationPoint(0, 0.23F, -0.74F);
        leftChest5.addBox(-1, -4, -2, 2, 4, 2, 0);
        rightFin1_5 = new ModelRendererTF(this, 15, 58);
        rightFin1_5.setRotationPoint(0, -0.5F, 0);
        rightFin1_5.addBox(-0.5F, -1, 0, 1, 1, 5, 0);
        rightFin1_3 = new ModelRendererTF(this, 0, 47);
        rightFin1_3.setRotationPoint(0, -6.5F, 0);
        rightFin1_3.addBox(-0.5F, 0, -1, 1, 8, 1, 0);
        rightWing7 = new ModelRendererTF(this, 54, 60);
        rightWing7.setRotationPoint(0, 1, 0);
        rightWing7.addBox(-2, 0, -0.5F, 2, 1, 1, 0);
        leftFin2_10 = new ModelRendererTF(this, 13, 37);
        leftFin2_10.mirror = true;
        leftFin2_10.setRotationPoint(0, 0.1F, 0);
        leftFin2_10.addBox(-0.5F, -1, 0, 1, 1, 1, 0);
        rightKnee3 = new ModelRendererTF(this, 20, 19);
        rightKnee3.setRotationPoint(0, -1.81F, -0.07F);
        rightKnee3.addBox(-1.5F, 0, -0.4F, 3, 2, 1, 0);
        setRotateAngle(rightKnee3, 0.3141592653589793F, 0, 0);
        rightChest9 = new ModelRendererTF(this, 14, 25);
        rightChest9.setRotationPoint(0, 2, 0);
        rightChest9.addBox(-1, 0, 0, 2, 1, 1, 0);
        setRotateAngle(rightChest9, 0.6981317007977318F, 0, 0);
        leftGun11 = new ModelRendererTF(this, 45, 11);
        leftGun11.mirror = true;
        leftGun11.setRotationPoint(0, 0, 0);
        leftGun11.addBox(-0.30000000000000004F, -1, -0.3F, 1, 2, 1, 0);
        upperFoot2 = new ModelRendererTF(this, 8, 17);
        upperFoot2.setRotationPoint(0, 0.46F, -2.77F);
        upperFoot2.addBox(-1.5F, -0.5F, 0, 3, 1, 3, 0);
        setRotateAngle(upperFoot2, 0.45378560551852565F, 0, 0);
        leftChest1 = new ModelRendererTF(this, 38, 18);
        leftChest1.mirror = true;
        leftChest1.setRotationPoint(1.7F, -5.7F, 0);
        leftChest1.addBox(0, -2.5F, -2, 2, 5, 4, 0);
        rightHip2 = new ModelRendererTF(this, 27, 10);
        rightHip2.setRotationPoint(-1, -1.02F, -1.4F);
        rightHip2.addBox(-1, 0, -0.5F, 2, 2, 1, 0);
        setRotateAngle(rightHip2, 0.10471975511965977F, 0, 0);
        leftChest8 = new ModelRendererTF(this, 10, 31);
        leftChest8.mirror = true;
        leftChest8.setRotationPoint(0, 1, 0);
        leftChest8.addBox(-1, 0, 0, 2, 2, 1, 0);
        setRotateAngle(leftChest8, 0.6981317007977318F, 0, 0);
        leftChest3 = new ModelRendererTF(this, 16, 27);
        leftChest3.mirror = true;
        leftChest3.setRotationPoint(0, -2, 0);
        leftChest3.addBox(-1, -2, -1, 2, 2, 1, 0);
        setRotateAngle(leftChest3, 0.3490658503988659F, 0, 0);
        leftGun5 = new ModelRendererTF(this, 60, 26);
        leftGun5.mirror = true;
        leftGun5.setRotationPoint(0, 0, 0);
        leftGun5.addBox(-0.8F, -2.5F, -0.2F, 1, 4, 1, 0);
        spine = new ModelRendererTF(this, 54, 36);
        spine.setRotationPoint(0, 0, 0.5F);
        spine.addBox(-1, -8, -1, 2, 8, 1, 0);
        setRotateAngle(spine, 0.10471975511965977F, 0, 0);
        upperBackLeg1 = new ModelRendererTF(this, 12, 8);
        upperBackLeg1.setRotationPoint(0, 0.12F, 1.02F);
        upperBackLeg1.addBox(-1.5F, 0, -0.5F, 3, 4, 1, 0);
        setRotateAngle(upperBackLeg1, 0.24434609527920614F, 0, 0);
        leftFin1_7 = new ModelRendererTF(this, 27, 59);
        leftFin1_7.mirror = true;
        leftFin1_7.setRotationPoint(0, 0, 0);
        leftFin1_7.addBox(-0.5F, -1, 0, 1, 1, 4, 0);
        rightHelmet9 = new ModelRendererTF(this, 27, 36);
        rightHelmet9.setRotationPoint(0, 0, 1);
        rightHelmet9.addBox(0, -1, 0, 1, 2, 1, 0);
        setRotateAngle(rightHelmet9, 0, 0.8203047484373349F, 0);
        lowerLeg2 = new ModelRendererTF(this, 0, 0);
        lowerLeg2.mirror = true;
        lowerLeg2.setRotationPoint(0, 5.7F, -0.1F);
        lowerLeg2.addBox(-1.5F, 0, -1.5F, 3, 8, 3, 0);
        setRotateAngle(lowerLeg2, 0.24434609527920614F, -0.05235987755982988F, 0.06981317007977318F);
        rightHelmet3 = new ModelRendererTF(this, 21, 37);
        rightHelmet3.setRotationPoint(0, -1.3F, -0.3F);
        rightHelmet3.addBox(-0.5F, -1, -1, 1, 1, 2, 0);
        setRotateAngle(rightHelmet3, 0.15707963267948966F, 0, 0);
        rightWing8 = new ModelRendererTF(this, 56, 62);
        rightWing8.setRotationPoint(0, 1, 0);
        rightWing8.addBox(-1, 0, -0.5F, 1, 1, 1, 0);
        rightHelmet9_1 = new ModelRendererTF(this, 27, 36);
        rightHelmet9_1.mirror = true;
        rightHelmet9_1.setRotationPoint(0, 0, 1);
        rightHelmet9_1.addBox(-1, -1, 0, 1, 2, 1, 0);
        setRotateAngle(rightHelmet9_1, 0, -0.8203047484373349F, 0);
        leftKnee1 = new ModelRendererTF(this, 0, 23);
        leftKnee1.mirror = true;
        leftKnee1.setRotationPoint(0, 1.5F, -1.46F);
        leftKnee1.addBox(-1.5F, -1, -0.5F, 3, 2, 1, 0);
        setRotateAngle(leftKnee1, 0.5235987755982988F, 0, 0);
        rightWing2 = new ModelRendererTF(this, 44, 47);
        rightWing2.setRotationPoint(-1, -1, 0);
        rightWing2.addBox(-7, -1, -0.5F, 7, 4, 1, 0);
        rightHelmet6_1 = new ModelRendererTF(this, 30, 29);
        rightHelmet6_1.mirror = true;
        rightHelmet6_1.setRotationPoint(0, 0, 1);
        rightHelmet6_1.addBox(-0.5F, 0, 0, 1, 1, 1, 0);
        setRotateAngle(rightHelmet6_1, -0.8726646259971648F, 0, 0);
        rightChest7 = new ModelRendererTF(this, 14, 25);
        rightChest7.setRotationPoint(-1, -2.5F, -2);
        rightChest7.addBox(-1, 0, 0, 2, 1, 1, 0);
        setRotateAngle(rightChest7, -0.6981317007977318F, 0, 0);
        rightHelmet1_1 = new ModelRendererTF(this, 18, 40);
        rightHelmet1_1.mirror = true;
        rightHelmet1_1.setRotationPoint(1, -1.5F, 0);
        rightHelmet1_1.addBox(-0.1F, -1.8F, -1.2F, 1, 3, 2, 0);
        leftFin1_4 = new ModelRendererTF(this, 0, 56);
        leftFin1_4.mirror = true;
        leftFin1_4.setRotationPoint(0, 8, 0);
        leftFin1_4.addBox(-0.5F, 0, -1, 1, 1, 1, 0);
        setRotateAngle(leftFin1_4, -0.8464846872172498F, 0, 0);
        leftGun8 = new ModelRendererTF(this, 45, 11);
        leftGun8.mirror = true;
        leftGun8.setRotationPoint(0, 3.5F, 0);
        leftGun8.addBox(-0.30000000000000004F, -1, -0.7F, 1, 2, 1, 0);
        leftArm4 = new ModelRendererTF(this, 30, 23);
        leftArm4.mirror = true;
        leftArm4.setRotationPoint(0, 4.7F, 0);
        leftArm4.addBox(-1, 0, -1, 2, 2, 2, 0);
        setRotateAngle(leftArm4, -0.10471975511965977F, 0, 0.08726646259971647F);
        canopy6 = new ModelRendererTF(this, 52, 24);
        canopy6.setRotationPoint(0, 8, 0);
        canopy6.addBox(-1, 0, 0, 2, 4, 2, 0);
        setRotateAngle(canopy6, -3.141592653589793F, -3.141592653589793F, 0);
        rightGun9 = new ModelRendererTF(this, 45, 11);
        rightGun9.setRotationPoint(0, 0, 0);
        rightGun9.addBox(-0.3F, -1, -0.7F, 1, 2, 1, 0);
        leftChest7 = new ModelRendererTF(this, 14, 25);
        leftChest7.mirror = true;
        leftChest7.setRotationPoint(1, -2.5F, -2);
        leftChest7.addBox(-1, 0, 0, 2, 1, 1, 0);
        setRotateAngle(leftChest7, -0.6981317007977318F, 0, 0);
        leftGun9 = new ModelRendererTF(this, 45, 11);
        leftGun9.mirror = true;
        leftGun9.setRotationPoint(0, 0, 0);
        leftGun9.addBox(-0.7F, -1, -0.7F, 1, 2, 1, 0);
        leftGun4 = new ModelRendererTF(this, 60, 26);
        leftGun4.mirror = true;
        leftGun4.setRotationPoint(1, 0, 0);
        leftGun4.addBox(-0.8F, -2.5F, -0.8F, 1, 4, 1, 0);
        rightWing4 = new ModelRendererTF(this, 48, 54);
        rightWing4.setRotationPoint(0, 1, 0);
        rightWing4.addBox(-5, 0, -0.5F, 5, 1, 1, 0);
        rightGun10 = new ModelRendererTF(this, 45, 11);
        rightGun10.setRotationPoint(0, 0, 0);
        rightGun10.addBox(-0.3F, -1, -0.3F, 1, 2, 1, 0);
        rightHelmet4 = new ModelRendererTF(this, 18, 45);
        rightHelmet4.setRotationPoint(0, -1, -1);
        rightHelmet4.addBox(-0.5F, 0, 0, 1, 1, 1, 0);
        setRotateAngle(rightHelmet4, -0.3490658503988659F, 0, 0);
        leftGun10 = new ModelRendererTF(this, 45, 11);
        leftGun10.mirror = true;
        leftGun10.setRotationPoint(0, 0, 0);
        leftGun10.addBox(-0.7F, -1, -0.3F, 1, 2, 1, 0);
        head = new ModelRendererTF(this, 18, 31);
        head.setRotationPoint(0, -0.5F, -1.3F);
        head.addBox(-1, -3, -1.5F, 2, 3, 3, 0);
        rightGun2 = new ModelRendererTF(this, 60, 26);
        rightGun2.setRotationPoint(-0.3F, 0, 0);
        rightGun2.addBox(-1.8F, -2.5F, -0.8F, 1, 4, 1, 0);
        nose2 = new ModelRendererTF(this, 36, 29);
        nose2.mirror = true;
        nose2.setRotationPoint(0, 0, 0);
        nose2.addBox(-0.75F, 0, -1, 1, 1, 1, 0);
        rightHelmet8 = new ModelRendererTF(this, 33, 30);
        rightHelmet8.setRotationPoint(-0.9F, -0.3F, 0.8F);
        rightHelmet8.addBox(0, -1.5F, 0, 1, 3, 1, 0);
        setRotateAngle(rightHelmet8, 0, 0.45378560551852565F, 0);
        leftWing3 = new ModelRendererTF(this, 46, 52);
        leftWing3.mirror = true;
        leftWing3.setRotationPoint(0, 3, 0);
        leftWing3.addBox(0, 0, -0.5F, 6, 1, 1, 0);
        leftFin2_6 = new ModelRendererTF(this, 15, 52);
        leftFin2_6.mirror = true;
        leftFin2_6.setRotationPoint(0, 0.6F, 0);
        leftFin2_6.addBox(-0.5F, -1, 0, 1, 1, 5, 0);
        canopy12 = new ModelRendererTF(this, 50, 19);
        canopy12.setRotationPoint(0, 0, -0.5F);
        canopy12.addBox(-1, 0, 0, 2, 4, 1, 0);
        setRotateAngle(canopy12, 0.08726646259971647F, 0, 0);
        rightHelmet7 = new ModelRendererTF(this, 28, 32);
        rightHelmet7.setRotationPoint(-0.3F, 0.1F, -0.2F);
        rightHelmet7.addBox(-1, -1.5F, -0.5F, 1, 2, 2, 0);
        rightHelmet1 = new ModelRendererTF(this, 18, 40);
        rightHelmet1.setRotationPoint(-1, -1.5F, 0);
        rightHelmet1.addBox(-0.9F, -1.8F, -1.2F, 1, 3, 2, 0);
        rightWing11 = new ModelRendererTF(this, 54, 45);
        rightWing11.setRotationPoint(0, -2, 0);
        rightWing11.addBox(0, 0, -0.5F, 2, 1, 1, 0);
        setRotateAngle(rightWing11, 0, 0, -1.064650843716541F);
        leftWing9 = new ModelRendererTF(this, 60, 51);
        leftWing9.mirror = true;
        leftWing9.setRotationPoint(1, 9, 0.1F);
        leftWing9.addBox(-1, -12, -0.5F, 1, 12, 1, 0);
        setRotateAngle(leftWing9, 0, 0, 0.7853981633974483F);
        rightKnee2 = new ModelRendererTF(this, 8, 21);
        rightKnee2.setRotationPoint(0, -0.75F, -0.07F);
        rightKnee2.addBox(-1.5F, -2, -0.5F, 3, 2, 1, 0);
        setRotateAngle(rightKnee2, -0.5235987755982988F, 0, 0);
        canopy19 = new ModelRendererTF(this, 56, 19);
        canopy19.mirror = true;
        canopy19.setRotationPoint(0, 4, 0);
        canopy19.addBox(-0.5F, 0, 0, 1, 4, 1, 0);
        setRotateAngle(canopy19, 0.0767944870877505F, 0, 0);
        leftChest2 = new ModelRendererTF(this, 7, 36);
        leftChest2.mirror = true;
        leftChest2.setRotationPoint(1.5F, -2.5F, 2);
        leftChest2.addBox(-1, -2, -1, 2, 2, 1, 0);
        lowerLegPanel1 = new ModelRendererTF(this, 5, 11);
        lowerLegPanel1.setRotationPoint(0, 4.8F, -0.7F);
        lowerLegPanel1.addBox(-1, -1.5F, -1, 2, 3, 1, 0);
        leftGun3 = new ModelRendererTF(this, 60, 11);
        leftGun3.mirror = true;
        leftGun3.setRotationPoint(1, 1.5F, 0);
        leftGun3.addBox(-0.5F, -5, -0.5F, 1, 5, 1, 0);
        leftTorsoSide = new ModelRendererTF(this, 38, 0);
        leftTorsoSide.mirror = true;
        leftTorsoSide.setRotationPoint(3, -0.5F, 0);
        leftTorsoSide.addBox(-1, -3, -1.5F, 1, 3, 3, 0);
        setRotateAngle(leftTorsoSide, 0, 0, 0.08726646259971647F);
        rightWing9 = new ModelRendererTF(this, 60, 51);
        rightWing9.setRotationPoint(-1, 9, 0.1F);
        rightWing9.addBox(0, -12, -0.5F, 1, 12, 1, 0);
        setRotateAngle(rightWing9, 0, 0, -0.7853981633974483F);
        rightFin1_9 = new ModelRendererTF(this, 0, 60);
        rightFin1_9.setRotationPoint(0, 0.1F, 0);
        rightFin1_9.addBox(-0.5F, -1, 0, 1, 1, 2, 0);
        upperLeg2 = new ModelRendererTF(this, 12, 0);
        upperLeg2.mirror = true;
        upperLeg2.setRotationPoint(2, 0.3F, 0);
        upperLeg2.addBox(-1.5F, 0, -1.25F, 3, 6, 2, 0);
        setRotateAngle(upperLeg2, -0.13962634015954636F, -0.08726646259971647F, -0.10471975511965977F);
        rightArmConnector = new ModelRendererTF(this, 21, 23);
        rightArmConnector.setRotationPoint(-1.5F, -1, 0);
        rightArmConnector.addBox(-1, -1, -1, 1, 3, 2, 0);
        rightGun7 = new ModelRendererTF(this, 60, 17);
        rightGun7.setRotationPoint(-1, 1, 0);
        rightGun7.addBox(-0.5F, 0.5F, -0.5F, 1, 8, 1, 0);
        leftFin1_6 = new ModelRendererTF(this, 8, 57);
        leftFin1_6.mirror = true;
        leftFin1_6.setRotationPoint(0, 0.6F, 0);
        leftFin1_6.addBox(-0.5F, -1, 0, 1, 1, 5, 0);
        rightArm1 = new ModelRendererTF(this, 36, 11);
        rightArm1.setRotationPoint(-0.8F, 0.2F, 0);
        rightArm1.addBox(-3, -1.5F, -1.5F, 3, 4, 3, 0);
        setRotateAngle(rightArm1, 0.06981317007977318F, 0, 0.10471975511965977F);
        rightChest4 = new ModelRendererTF(this, 12, 34);
        rightChest4.setRotationPoint(0, -2, 0);
        rightChest4.addBox(-1, -2, -1, 2, 2, 1, 0);
        setRotateAngle(rightChest4, 0.3490658503988659F, 0, 0);
        leftGun6 = new ModelRendererTF(this, 60, 26);
        leftGun6.mirror = true;
        leftGun6.setRotationPoint(0, 0, 0);
        leftGun6.addBox(-0.19999999999999996F, -2.5F, -0.2F, 1, 4, 1, 0);
        leftArm1 = new ModelRendererTF(this, 36, 11);
        leftArm1.mirror = true;
        leftArm1.setRotationPoint(0.8F, 0.2F, 0);
        leftArm1.addBox(0, -1.5F, -1.5F, 3, 4, 3, 0);
        setRotateAngle(leftArm1, 0.06981317007977318F, 0, -0.10471975511965977F);
        rightFin1_1 = new ModelRendererTF(this, 0, 57);
        rightFin1_1.setRotationPoint(0, 0.7F, -0.5F);
        rightFin1_1.addBox(-0.5F, -0.5F, 0, 1, 1, 6, 0);
        setRotateAngle(rightFin1_1, 1.5707963267948966F, 0, 0);
        rightFin2_6 = new ModelRendererTF(this, 15, 52);
        rightFin2_6.setRotationPoint(0, 0.6F, 0);
        rightFin2_6.addBox(-0.5F, -1, 0, 1, 1, 5, 0);
        backUpperLeg1 = new ModelRendererTF(this, 22, 0);
        backUpperLeg1.setRotationPoint(0, 3, 0.25F);
        backUpperLeg1.addBox(-1, -3, 0, 2, 6, 1, 0);
        rightFin2_3 = new ModelRendererTF(this, 14, 39);
        rightFin2_3.setRotationPoint(0, -6.5F, 0);
        rightFin2_3.addBox(-0.5F, 0, -1, 1, 8, 1, 0);
        rightLowerLeg2 = new ModelRendererTF(this, 0, 12);
        rightLowerLeg2.mirror = true;
        rightLowerLeg2.setRotationPoint(-1.3F, 0.1F, 0);
        rightLowerLeg2.addBox(-0.5F, 0, -1.5F, 1, 8, 3, 0);
        setRotateAngle(rightLowerLeg2, 0.06981317007977318F, 0, 0.03490658503988659F);
        rightHelmet5_1 = new ModelRendererTF(this, 22, 40);
        rightHelmet5_1.mirror = true;
        rightHelmet5_1.setRotationPoint(0, -1, 1);
        rightHelmet5_1.addBox(-0.5F, 0, 0, 1, 1, 1, 0);
        setRotateAngle(rightHelmet5_1, -0.40142572795869574F, 0, 0);
        footThruster1 = new ModelRendererTF(this, 20, 7);
        footThruster1.setRotationPoint(0, 7.3F, 1.2F);
        footThruster1.addBox(-1, 0, -1, 2, 2, 2, 0);
        canopy7 = new ModelRendererTF(this, 50, 24);
        canopy7.setRotationPoint(0, 3.95F, 1);
        canopy7.addBox(-0.85F, 0, -0.85F, 1, 1, 1, 0);
        lowerBackLeg2 = new ModelRendererTF(this, 20, 14);
        lowerBackLeg2.mirror = true;
        lowerBackLeg2.setRotationPoint(0, 5.87F, 1.47F);
        lowerBackLeg2.addBox(-1.5F, -2, 0, 3, 4, 1, 0);
        leftFin2_3 = new ModelRendererTF(this, 14, 39);
        leftFin2_3.mirror = true;
        leftFin2_3.setRotationPoint(0, -6.5F, 0);
        leftFin2_3.addBox(-0.5F, 0, -1, 1, 8, 1, 0);
        leftGun7 = new ModelRendererTF(this, 60, 17);
        leftGun7.mirror = true;
        leftGun7.setRotationPoint(1, 1, 0);
        leftGun7.addBox(-0.5F, 0.5F, -0.5F, 1, 8, 1, 0);
        leftWing8 = new ModelRendererTF(this, 56, 62);
        leftWing8.mirror = true;
        leftWing8.setRotationPoint(0, 1, 0);
        leftWing8.addBox(0, 0, -0.5F, 1, 1, 1, 0);
        waist = new ModelRendererTF(this, 28, 0);
        waist.setRotationPoint(0, 9, 0);
        waist.addBox(-1, -1, -1.5F, 2, 3, 3, 0);
        leftFin2_2 = new ModelRendererTF(this, 10, 39);
        leftFin2_2.mirror = true;
        leftFin2_2.setRotationPoint(0, 0, 0);
        leftFin2_2.addBox(-0.5F, -6.5F, -1, 1, 7, 1, 0);
        setRotateAngle(leftFin2_2, -1.5707963267948966F, 0, 0);
        rightHelmet3_1 = new ModelRendererTF(this, 21, 37);
        rightHelmet3_1.mirror = true;
        rightHelmet3_1.setRotationPoint(0, -1.3F, -0.3F);
        rightHelmet3_1.addBox(-0.5F, -1, -1, 1, 1, 2, 0);
        setRotateAngle(rightHelmet3_1, 0.15707963267948966F, 0, 0);
        leftArm5 = new ModelRendererTF(this, 25, 19);
        leftArm5.mirror = true;
        leftArm5.setRotationPoint(1.5F, 2.1F, 0);
        leftArm5.addBox(-0.7F, 0, -1.3F, 2, 1, 3, 0);
        footThruster2 = new ModelRendererTF(this, 20, 7);
        footThruster2.mirror = true;
        footThruster2.setRotationPoint(0, 7.3F, 1.2F);
        footThruster2.addBox(-1, 0, -1, 2, 2, 2, 0);
        leftFin1_5 = new ModelRendererTF(this, 15, 58);
        leftFin1_5.mirror = true;
        leftFin1_5.setRotationPoint(0, -0.5F, 0);
        leftFin1_5.addBox(-0.5F, -1, 0, 1, 1, 5, 0);
        leftKnee2 = new ModelRendererTF(this, 8, 21);
        leftKnee2.mirror = true;
        leftKnee2.setRotationPoint(0, -0.75F, -0.07F);
        leftKnee2.addBox(-1.5F, -2, -0.5F, 3, 2, 1, 0);
        setRotateAngle(leftKnee2, -0.5235987755982988F, 0, 0);
        leftWing4 = new ModelRendererTF(this, 48, 54);
        leftWing4.mirror = true;
        leftWing4.setRotationPoint(0, 1, 0);
        leftWing4.addBox(0, 0, -0.5F, 5, 1, 1, 0);
        rightFin1_4 = new ModelRendererTF(this, 0, 56);
        rightFin1_4.setRotationPoint(0, 8, 0);
        rightFin1_4.addBox(-0.5F, 0, -1, 1, 1, 1, 0);
        setRotateAngle(rightFin1_4, -0.8464846872172498F, 0, 0);
        leftHip2 = new ModelRendererTF(this, 27, 10);
        leftHip2.mirror = true;
        leftHip2.setRotationPoint(1, -1.02F, -1.4F);
        leftHip2.addBox(-1, 0, -0.5F, 2, 2, 1, 0);
        setRotateAngle(leftHip2, 0.10471975511965977F, 0, 0);
        nose1 = new ModelRendererTF(this, 36, 29);
        nose1.setRotationPoint(0, -1.9F, -0.5F);
        nose1.addBox(-0.25F, 0, -1, 1, 1, 1, 0);
        setRotateAngle(nose1, -0.33161255787892263F, 0, 0);
        headPiece3 = new ModelRendererTF(this, 36, 27);
        headPiece3.setRotationPoint(0, 0, 1);
        headPiece3.addBox(-0.5F, 0, 0, 1, 1, 1, 0);
        setRotateAngle(headPiece3, -0.5585053606381855F, 0, 0);
        rightKnee1 = new ModelRendererTF(this, 0, 23);
        rightKnee1.setRotationPoint(0, 1.5F, -1.46F);
        rightKnee1.addBox(-1.5F, -1, -0.5F, 3, 2, 1, 0);
        setRotateAngle(rightKnee1, 0.5235987755982988F, 0, 0);
        rightFin1_2 = new ModelRendererTF(this, 4, 47);
        rightFin1_2.setRotationPoint(0, 0, 0);
        rightFin1_2.addBox(-0.5F, -6.5F, -1, 1, 7, 1, 0);
        setRotateAngle(rightFin1_2, -1.5707963267948966F, 0, 0);
        rightFin2_9 = new ModelRendererTF(this, 28, 56);
        rightFin2_9.setRotationPoint(0, 0.1F, 0);
        rightFin2_9.addBox(-0.5F, -1, 0, 1, 1, 2, 0);
        rightWing6 = new ModelRendererTF(this, 52, 58);
        rightWing6.setRotationPoint(0, 1, 0);
        rightWing6.addBox(-3, 0, -0.5F, 3, 1, 1, 0);
        canopy3 = new ModelRendererTF(this, 8, 24);
        canopy3.setRotationPoint(0, 0, -1.5F);
        canopy3.addBox(-1, 0, 0, 2, 2, 1, 0);
        setRotateAngle(canopy3, -0.3490658503988659F, 0, 0);
        leftKnee3 = new ModelRendererTF(this, 20, 19);
        leftKnee3.mirror = true;
        leftKnee3.setRotationPoint(0, -1.81F, -0.07F);
        leftKnee3.addBox(-1.5F, 0, -0.4F, 3, 2, 1, 0);
        setRotateAngle(leftKnee3, 0.3141592653589793F, 0, 0);
        footBase1 = new ModelRendererTF(this, 18, 11);
        footBase1.setRotationPoint(0, 8.2F, 0);
        footBase1.addBox(-1.5F, 0, -3, 3, 1, 2, 0);
        setRotateAngle(footBase1, -0.10471975511965977F, 0, -0.017453292519943295F);
        rightTorsoSide = new ModelRendererTF(this, 38, 0);
        rightTorsoSide.setRotationPoint(-3, -0.5F, 0);
        rightTorsoSide.addBox(0, -3, -1.5F, 1, 3, 3, 0);
        setRotateAngle(rightTorsoSide, 0, 0, -0.08726646259971647F);
        rightHelmet4_1 = new ModelRendererTF(this, 18, 45);
        rightHelmet4_1.mirror = true;
        rightHelmet4_1.setRotationPoint(0, -1, -1);
        rightHelmet4_1.addBox(-0.5F, 0, 0, 1, 1, 1, 0);
        setRotateAngle(rightHelmet4_1, -0.3490658503988659F, 0, 0);
        rightWing12 = new ModelRendererTF(this, 60, 43);
        rightWing12.setRotationPoint(2, 1, 0);
        rightWing12.addBox(-1, 0, -0.5F, 1, 4, 1, 0);
        setRotateAngle(rightWing12, 0, 0, 1.064650843716541F);
        leftHip3 = new ModelRendererTF(this, 27, 10);
        leftHip3.mirror = true;
        leftHip3.setRotationPoint(1, -1.02F, 1.4F);
        leftHip3.addBox(-1, 0, -0.5F, 2, 2, 1, 0);
        setRotateAngle(leftHip3, -0.10471975511965977F, 0, 0);
        rightGun5 = new ModelRendererTF(this, 60, 26);
        rightGun5.setRotationPoint(0, 0, 0);
        rightGun5.addBox(-0.2F, -2.5F, -0.2F, 1, 4, 1, 0);
        rightWing1 = new ModelRendererTF(this, 60, 31);
        rightWing1.setRotationPoint(-0.9F, -0.7F, 2);
        rightWing1.addBox(-1, -2, -0.5F, 1, 11, 1, 0);
        leftWing12 = new ModelRendererTF(this, 60, 43);
        leftWing12.mirror = true;
        leftWing12.setRotationPoint(-2, 1, 0);
        leftWing12.addBox(0, 0, -0.5F, 1, 4, 1, 0);
        setRotateAngle(leftWing12, 0, 0, -1.064650843716541F);
        lowerFoot1 = new ModelRendererTF(this, 8, 13);
        lowerFoot1.setRotationPoint(0, 0.55F, -1.22F);
        lowerFoot1.addBox(-1.5F, -0.5F, 0, 3, 1, 3, 0);
        setRotateAngle(lowerFoot1, 0.45378560551852565F, 0, 0);
        leftWing5 = new ModelRendererTF(this, 50, 56);
        leftWing5.mirror = true;
        leftWing5.setRotationPoint(0, 1, 0);
        leftWing5.addBox(0, 0, -0.5F, 4, 1, 1, 0);
        rightArm4 = new ModelRendererTF(this, 30, 23);
        rightArm4.setRotationPoint(0, 4.7F, 0);
        rightArm4.addBox(-1, 0, -1, 2, 2, 2, 0);
        setRotateAngle(rightArm4, -0.10471975511965977F, 0, -0.08726646259971647F);
        rightWing16 = new ModelRendererTF(this, 60, 43);
        rightWing16.setRotationPoint(2, 1, 0);
        rightWing16.addBox(-1, 0, -0.5F, 1, 4, 1, 0);
        setRotateAngle(rightWing16, 0, 0, 1.064650843716541F);
        headPiece1 = new ModelRendererTF(this, 26, 26);
        headPiece1.mirror = true;
        headPiece1.setRotationPoint(0, -2.63F, -0.51F);
        headPiece1.addBox(-0.5F, -1, -1, 1, 1, 2, 0);
        setRotateAngle(headPiece1, 0.22689280275926282F, 0, 0);
        leftWing10 = new ModelRendererTF(this, 54, 33);
        leftWing10.mirror = true;
        leftWing10.setRotationPoint(0, -12, 0);
        leftWing10.addBox(-2, -2, -0.5F, 2, 2, 1, 0);
        setRotateAngle(leftWing10, 0, 0, -0.7853981633974483F);
        rightFin1_7 = new ModelRendererTF(this, 27, 59);
        rightFin1_7.setRotationPoint(0, 0, 0);
        rightFin1_7.addBox(-0.5F, -1, 0, 1, 1, 4, 0);
        rightGun3 = new ModelRendererTF(this, 60, 11);
        rightGun3.setRotationPoint(-1, 1.5F, 0);
        rightGun3.addBox(-0.5F, -5, -0.5F, 1, 5, 1, 0);
        rightChest5 = new ModelRendererTF(this, 28, 13);
        rightChest5.setRotationPoint(0, 0.23F, -0.74F);
        rightChest5.addBox(-1, -4, -2, 2, 4, 2, 0);
        leftWing14 = new ModelRendererTF(this, 54, 33);
        leftWing14.mirror = true;
        leftWing14.setRotationPoint(0, -12, 0);
        leftWing14.addBox(-2, -2, -0.5F, 2, 2, 1, 0);
        setRotateAngle(leftWing14, 0, 0, -0.7853981633974483F);
        rightFin2_2 = new ModelRendererTF(this, 10, 39);
        rightFin2_2.setRotationPoint(0, 0, 0);
        rightFin2_2.addBox(-0.5F, -6.5F, -1, 1, 7, 1, 0);
        setRotateAngle(rightFin2_2, -1.5707963267948966F, 0, 0);
        rightChest1 = new ModelRendererTF(this, 38, 18);
        rightChest1.setRotationPoint(-1.7F, -5.7F, 0);
        rightChest1.addBox(-2, -2.5F, -2, 2, 5, 4, 0);
        rightArm5 = new ModelRendererTF(this, 25, 19);
        rightArm5.setRotationPoint(-1.5F, 2.1F, 0);
        rightArm5.addBox(-1.3F, 0, -1.3F, 2, 1, 3, 0);
        headPiece1.addChild(headPiece2);
        leftChest1.addChild(leftWing1);
        leftWing6.addChild(leftWing7);
        rightFin2_1.addChild(rightFin2_5);
        canopy8.addChild(canopy9);
        lowerLeg1.addChild(rightLowerLeg1);
        rightWing1.addChild(rightWing13);
        leftChest3.addChild(leftChest4);
        rightFin2_9.addChild(rightFin2_10);
        leftChest1.addChild(leftArmConnector);
        headPiece4.addChild(headPiece5);
        leftWing15.addChild(leftWing16);
        canopy6.addChild(canopy18);
        leftFin1_8.addChild(leftFin1_9);
        waist.addChild(leftHip1);
        rightWing14.addChild(rightWing15);
        canopy6.addChild(canopy14);
        torso.addChild(canopy1);
        rightHelmet3.addChild(rightHelmet5);
        leftFin1_2.addChild(leftFin1_3);
        canopy14.addChild(canopy15);
        upperLeg2.addChild(backUpperLeg2);
        canopy3.addChild(canopy4);
        leftArm1.addChild(leftGun1);
        rightHelmet1_1.addChild(rightHelmet7_1);
        head.addChild(chin);
        rightWing2.addChild(rightWing3);
        leftGun1.addChild(leftGun2);
        lowerLeg1.addChild(leftLowerLeg1);
        leftFin1_9.addChild(leftFin1_10);
        rightArm1.addChild(rightGun1);
        lowerLeg2.addChild(footBase2);
        waist.addChild(upperLeg1);
        leftWing1.addChild(leftWing13);
        rightHip1.addChild(rightHip3);
        rightChest5.addChild(rightChest6);
        rightFin1_7.addChild(rightFin1_8);
        rightFin1_9.addChild(rightFin1_10);
        footBase2.addChild(lowerFoot2);
        canopy16.addChild(canopy17);
        rightWing13.addChild(rightWing14);
        headPiece3.addChild(headPiece4);
        rightChest2.addChild(rightChest3);
        torso.addChild(neck);
        rightGun5.addChild(rightGun6);
        leftFin1_1.addChild(leftFin1_2);
        rightHelmet5.addChild(rightHelmet6);
        leftArm2.addChild(leftArm3);
        lowerBackLeg1.addChild(rightFin2_1);
        leftFin1_7.addChild(leftFin1_8);
        neck.addChild(headConnector);
        lowerBackLeg2.addChild(leftFin1_1);
        leftFin2_6.addChild(leftFin2_7);
        leftWing14.addChild(leftWing15);
        canopy9.addChild(canopy10);
        rightArm1.addChild(rightArm2);
        leftWing10.addChild(leftWing11);
        footBase1.addChild(upperFoot1);
        lowerLeg2.addChild(upperBackLeg2);
        lowerLeg2.addChild(lowerLegPanel2);
        rightHelmet1_1.addChild(rightHelmet2_1);
        canopy7.addChild(canopy8);
        leftFin2_3.addChild(leftFin2_4);
        canopy6.addChild(canopy16);
        leftWing5.addChild(leftWing6);
        leftChest8.addChild(leftChest9);
        upperLeg1.addChild(lowerLeg1);
        leftArm1.addChild(leftArm2);
        rightFin2_7.addChild(rightFin2_8);
        rightWing4.addChild(rightWing5);
        leftFin2_7.addChild(leftFin2_8);
        leftChest5.addChild(leftChest6);
        rightFin2_6.addChild(rightFin2_7);
        waist.addChild(backCrotch);
        rightChest1.addChild(rightChest2);
        rightFin1_5.addChild(rightFin1_6);
        rightHelmet1.addChild(rightHelmet2);
        rightGun10.addChild(rightGun11);
        canopy7.addChild(canopy11);
        rightHelmet1_1.addChild(rightHelmet8_1);
        waist.addChild(frontCrotch);
        canopy1.addChild(canopy2);
        lowerLeg1.addChild(lowerBackLeg1);
        waist.addChild(rightHip1);
        canopy12.addChild(canopy13);
        lowerLeg2.addChild(leftLowerLeg2);
        rightChest7.addChild(rightChest8);
        canopy4.addChild(canopy5);
        lowerBackLeg2.addChild(leftFin2_1);
        rightWing9.addChild(rightWing10);
        rightGun2.addChild(rightGun4);
        rightGun7.addChild(rightGun8);
        canopy1.addChild(canopy20);
        rightArm2.addChild(rightArm3);
        leftWing1.addChild(leftWing2);
        rightFin2_3.addChild(rightFin2_4);
        leftFin2_8.addChild(leftFin2_9);
        leftFin2_1.addChild(leftFin2_5);
        waist.addChild(torso);
        leftChest2.addChild(leftChest5);
        rightFin1_1.addChild(rightFin1_5);
        rightFin1_2.addChild(rightFin1_3);
        rightWing6.addChild(rightWing7);
        leftFin2_9.addChild(leftFin2_10);
        rightKnee2.addChild(rightKnee3);
        rightChest8.addChild(rightChest9);
        leftGun10.addChild(leftGun11);
        footBase2.addChild(upperFoot2);
        torso.addChild(leftChest1);
        rightHip1.addChild(rightHip2);
        leftChest7.addChild(leftChest8);
        leftChest2.addChild(leftChest3);
        leftGun4.addChild(leftGun5);
        backCrotch.addChild(spine);
        lowerLeg1.addChild(upperBackLeg1);
        leftFin1_6.addChild(leftFin1_7);
        rightHelmet8.addChild(rightHelmet9);
        upperLeg2.addChild(lowerLeg2);
        rightHelmet1.addChild(rightHelmet3);
        rightWing7.addChild(rightWing8);
        rightHelmet8_1.addChild(rightHelmet9_1);
        lowerLeg2.addChild(leftKnee1);
        rightWing1.addChild(rightWing2);
        rightHelmet5_1.addChild(rightHelmet6_1);
        rightChest1.addChild(rightChest7);
        head.addChild(rightHelmet1_1);
        leftFin1_3.addChild(leftFin1_4);
        leftGun7.addChild(leftGun8);
        leftArm3.addChild(leftArm4);
        canopy1.addChild(canopy6);
        rightGun8.addChild(rightGun9);
        leftChest1.addChild(leftChest7);
        leftGun8.addChild(leftGun9);
        leftGun2.addChild(leftGun4);
        rightWing3.addChild(rightWing4);
        rightGun9.addChild(rightGun10);
        rightHelmet3.addChild(rightHelmet4);
        leftGun9.addChild(leftGun10);
        headConnector.addChild(head);
        rightGun1.addChild(rightGun2);
        nose1.addChild(nose2);
        rightHelmet1.addChild(rightHelmet8);
        leftWing2.addChild(leftWing3);
        leftFin2_5.addChild(leftFin2_6);
        canopy6.addChild(canopy12);
        rightHelmet1.addChild(rightHelmet7);
        head.addChild(rightHelmet1);
        rightWing10.addChild(rightWing11);
        leftWing1.addChild(leftWing9);
        rightKnee1.addChild(rightKnee2);
        canopy18.addChild(canopy19);
        leftChest1.addChild(leftChest2);
        lowerLeg1.addChild(lowerLegPanel1);
        leftGun2.addChild(leftGun3);
        torso.addChild(leftTorsoSide);
        rightWing1.addChild(rightWing9);
        rightFin1_8.addChild(rightFin1_9);
        waist.addChild(upperLeg2);
        rightChest1.addChild(rightArmConnector);
        rightGun2.addChild(rightGun7);
        leftFin1_5.addChild(leftFin1_6);
        rightArmConnector.addChild(rightArm1);
        rightChest3.addChild(rightChest4);
        leftGun5.addChild(leftGun6);
        leftArmConnector.addChild(leftArm1);
        lowerBackLeg1.addChild(rightFin1_1);
        rightFin2_5.addChild(rightFin2_6);
        upperLeg1.addChild(backUpperLeg1);
        rightFin2_2.addChild(rightFin2_3);
        lowerLeg2.addChild(rightLowerLeg2);
        rightHelmet3_1.addChild(rightHelmet5_1);
        lowerLeg1.addChild(footThruster1);
        canopy6.addChild(canopy7);
        lowerLeg2.addChild(lowerBackLeg2);
        leftFin2_2.addChild(leftFin2_3);
        leftGun2.addChild(leftGun7);
        leftWing7.addChild(leftWing8);
        leftFin2_1.addChild(leftFin2_2);
        rightHelmet1_1.addChild(rightHelmet3_1);
        leftArm1.addChild(leftArm5);
        lowerLeg2.addChild(footThruster2);
        leftFin1_1.addChild(leftFin1_5);
        leftKnee1.addChild(leftKnee2);
        leftWing3.addChild(leftWing4);
        rightFin1_3.addChild(rightFin1_4);
        leftHip1.addChild(leftHip2);
        head.addChild(nose1);
        headPiece2.addChild(headPiece3);
        lowerLeg1.addChild(rightKnee1);
        rightFin1_1.addChild(rightFin1_2);
        rightFin2_8.addChild(rightFin2_9);
        rightWing5.addChild(rightWing6);
        canopy1.addChild(canopy3);
        leftKnee2.addChild(leftKnee3);
        lowerLeg1.addChild(footBase1);
        torso.addChild(rightTorsoSide);
        rightHelmet3_1.addChild(rightHelmet4_1);
        rightWing11.addChild(rightWing12);
        leftHip1.addChild(leftHip3);
        rightGun4.addChild(rightGun5);
        rightChest1.addChild(rightWing1);
        leftWing11.addChild(leftWing12);
        footBase1.addChild(lowerFoot1);
        leftWing4.addChild(leftWing5);
        rightArm3.addChild(rightArm4);
        rightWing15.addChild(rightWing16);
        head.addChild(headPiece1);
        leftWing9.addChild(leftWing10);
        rightFin1_6.addChild(rightFin1_7);
        rightGun2.addChild(rightGun3);
        rightChest2.addChild(rightChest5);
        leftWing13.addChild(leftWing14);
        rightFin2_1.addChild(rightFin2_2);
        torso.addChild(rightChest1);
        rightArm1.addChild(rightArm5);

        setInitPose();
    }

    @Override
    public Transformer getTransformer()
    {
        return G1TransformerManager.STARSCREAM;
    }

    @Override
    public ModelRendererTF getWaist()
    {
        return waist;
    }

    @Override
    public void setupOffsets(EntityPlayer player, float progress, float limbSwing, float limbSwingAmount, float ticks, float rotationYaw, float rotationPitch, boolean wearingHead, boolean wearingChest, boolean wearingLegs, boolean wearingFeet)
    {
        ModelOffset offsets = TFModelHelper.getOffsets(player);
        head.rotationPointX += offsets.headOffsetX;
        head.rotationPointY += offsets.headOffsetY;
        head.rotationPointZ += offsets.headOffsetZ;

        if (wearingChest && !wearingLegs)
        {
            waist.rotationPointY += 2;

            if (!wearingHead)
            {
                offsets.headOffsetY = 2;
            }
        }

        if (!wearingChest && wearingHead)
        {
            head.rotationPointY += 0.5F;
            head.rotationPointZ += 1;
        }

        if (!wearingChest && wearingLegs)
        {
            upperLeg1.rotationPointY += 2;
            upperLeg2.rotationPointY += 2;
            lowerLeg1.rotationPointY -= 2;
            lowerLeg2.rotationPointY -= 2;
        }

        if (wearingFeet && !wearingLegs)
        {
            upperLeg1.rotationPointY = 0;
            upperLeg2.rotationPointY = 0;
            footBase1.setRotationPoint(0.5F, 6.5F, 1);
            footBase2.setRotationPoint(-0.5F, 6.5F, 1);

            if (!wearingChest)
            {
                waist.rotationPointY += 2;
            }
        }

        if (wearingHead)
        {
            faceTarget(head, 1, rotationYaw, rotationPitch);
        }
    }

    @Override
    public void doActiveAnimations(EntityPlayer player, float progress, float limbSwing, float limbSwingAmount, float ticks, float rotationYaw, float rotationPitch, boolean wearingHead, boolean wearingChest, boolean wearingLegs, boolean wearingFeet)
    {
        applyDefaultHoldingAnimation(rightArm1, leftArm1, rightArm3, leftArm3);
        applyDefaultHittingAnimation(rightArm1, leftArm1, head, torso, rightArm3, leftArm3);

        if (isRiding)
        {
            rightArm1.rotateAngleX -= PI / 5F;
            leftArm1.rotateAngleX -= PI / 5F;
            upperLeg1.rotateAngleX -= PI * 2F / 5F;
            upperLeg2.rotateAngleX -= PI * 2F / 5F;

            upperLeg1.rotateAngleY += PI / 10F;
            upperLeg2.rotateAngleY -= PI / 10F;
        }

        if (aimedBow)
        {
            rightArm1.rotateAngleY += -0.1F + head.rotateAngleY;
            leftArm1.rotateAngleY += 0.1F + head.rotateAngleY + 0.4F;
            rightArm1.rotateAngleX += -(PI / 2F) + head.rotateAngleX + 0.5F;
            leftArm1.rotateAngleX += -(PI / 2F) + head.rotateAngleX;
            rightArm1.rotateAngleZ += MathHelper.cos(ticks * 0.09F) * 0.05F + 0.05F;
            leftArm1.rotateAngleZ -= MathHelper.cos(ticks * 0.09F) * 0.05F + 0.05F;
            rightArm1.rotateAngleX += MathHelper.sin(ticks * 0.067F) * 0.05F;
            leftArm1.rotateAngleX -= MathHelper.sin(ticks * 0.067F) * 0.05F;
        }
    }

    @Override
    public void doWalkingAnimations(EntityPlayer player, float progress, float limbSwing, float limbSwingAmount, float ticks, float rotationYaw, float rotationPitch, boolean wearingHead, boolean wearingChest, boolean wearingLegs, boolean wearingFeet)
    {
        waist.rotationPointY -= 3;
        upperLeg1.rotateAngleX -= 0.1;
        upperLeg2.rotateAngleX -= 0.1;
        lowerLeg1.rotateAngleX += 0.1;
        lowerLeg2.rotateAngleX += 0.1;
        leftArm3.rotateAngleX -= 0.1;
        rightArm3.rotateAngleX -= 0.1;
        head.rotateAngleX += 0.1;

        bob(waist, 1F * globalSpeed, 1.7F * globalDegree, false, limbSwing, limbSwingAmount);
        waist.rotationPointY += 1 * limbSwingAmount + 3;
        walk(waist, 1F * globalSpeed, 0.05F * globalDegree, false, 1, 0.15F * limbSwingAmount * backwardInverter, limbSwing, limbSwingAmount);
        walk(torso, 1F * globalSpeed, 0.05F * globalDegree, false, 1, 0.15F * limbSwingAmount * backwardInverter, limbSwing, limbSwingAmount);
        swing(torso, 0.5F * globalSpeed, 0.6F * globalDegree, true, 0, 0, limbSwing, limbSwingAmount);
        walk(spine, 1F * globalSpeed, 0.05F * globalDegree, false, 1, 0.15F * limbSwingAmount * backwardInverter, limbSwing, limbSwingAmount);
        swing(spine, 0.5F * globalSpeed, 0.6F * globalDegree, true, 0, 0, limbSwing, limbSwingAmount);
        swing(waist, 0.5F * globalSpeed, 0.2F * globalDegree, false, 0, 0, limbSwing, limbSwingAmount);
        walk(head, 1F * globalSpeed, -0.1F * globalDegree, false, 1F, -0.3F * limbSwingAmount * backwardInverter, limbSwing, limbSwingAmount);

        swing(head, 0.5F * globalSpeed, 0.4F * globalDegree, false, 0, 0, limbSwing, limbSwingAmount);
        head.rotationPointX += 0.6 * globalDegree * limbSwingAmount * Math.cos(limbSwing * 0.5F * globalSpeed);

        walk(upperLeg1, 0.5F * globalSpeed, 1.2F * globalDegree, false, 0, 0, limbSwing, limbSwingAmount);
        walk(upperLeg2, 0.5F * globalSpeed, 1.2F * globalDegree, true, 0, 0, limbSwing, limbSwingAmount);
        walk(lowerLeg1, 0.5F * globalSpeed, 1.2F * globalDegree, false, -2.2F * backwardInverter, 0.6F, limbSwing, limbSwingAmount);
        walk(lowerLeg2, 0.5F * globalSpeed, 1.2F * globalDegree, true, -2.2F * backwardInverter, 0.6F, limbSwing, limbSwingAmount);
        walk(rightArm1, 0.5F * globalSpeed, 0.7F * globalDegree, true, 0F, -0.3F * limbSwingAmount * backwardInverter, limbSwing, limbSwingAmount);
        walk(leftArm1, 0.5F * globalSpeed, 0.7F * globalDegree, false, 0F, -0.3F * limbSwingAmount * backwardInverter, limbSwing, limbSwingAmount);
        walk(rightArm3, 0.5F * globalSpeed, 0.5F * globalDegree, true, -1F * backwardInverter, -0.5F * limbSwingAmount, limbSwing, limbSwingAmount);
        walk(leftArm3, 0.5F * globalSpeed, 0.5F * globalDegree, false, -1F * backwardInverter, -0.5F * limbSwingAmount, limbSwing, limbSwingAmount);

        swing(rightWing1, 0.5F * globalSpeed, 0.25F * globalDegree, true, 0F, 0.3F * limbSwingAmount * 1, limbSwing, limbSwingAmount);
        swing(leftWing1, 0.5F * globalSpeed, 0.25F * globalDegree, true, 0F, -0.3F * limbSwingAmount * 1, limbSwing, limbSwingAmount);

        if (player.isSneaking())
        {
            waist.rotationPointY -= limbSwingAmount;
            waist.rotateAngleX += 0.3;
            waist.rotationPointZ -= 0;

            head.rotateAngleX -= 0.3;
            upperLeg1.rotateAngleX -= 0.7;
            upperLeg2.rotateAngleX -= 0.7;
            upperLeg1.rotateAngleY += 0.2;
            upperLeg2.rotateAngleY -= 0.2;
            lowerLeg1.rotateAngleX += 0.5;
            lowerLeg2.rotateAngleX += 0.5;
            rightArm1.rotateAngleX -= 0.1;
            leftArm1.rotateAngleX -= 0.1;
            rightArm1.rotateAngleZ += 0.3;
            leftArm1.rotateAngleZ -= 0.3;
            rightArm3.rotateAngleZ -= 0.4;
            leftArm3.rotateAngleZ += 0.4;
            rightArm3.rotateAngleX -= 0.3;
            leftArm3.rotateAngleX -= 0.3;
            footBase1.rotateAngleX -= 0.1;
            footBase2.rotateAngleX -= 0.1;
        }
    }

    @Override
    public void doIdleAnimations(EntityPlayer player, float progress, float limbSwing, float limbSwingAmount, float ticks, float rotationYaw, float rotationPitch, boolean wearingHead, boolean wearingChest, boolean wearingLegs, boolean wearingFeet)
    {

    }

    @Override
    public void doFallingAnimations(EntityPlayer player, float progress, float limbSwing, float limbSwingAmount, float ticks, float rotationYaw, float rotationPitch, boolean wearingHead, boolean wearingChest, boolean wearingLegs, boolean wearingFeet)
    {
        double motionY = TFRenderHelper.getMotionY(player);
        float upwardPose = (float) (1 / (1 + Math.exp(-20 * (motionY + 0.2))));
        float downwardPose = (float) (1 / (1 + Math.exp(10 * (motionY + 0.2))));

        waist.rotateAngleX += 0.2 * limbSwingAmount * backwardInverter;

//      torsoConnector.rotateAngleX += 0.2 * upwardPose;
        torso.rotateAngleX -= 0.1 * upwardPose;
        spine.rotateAngleX -= 0.1 * upwardPose;
        head.rotateAngleX += 0.6 * upwardPose;

        rightArm1.rotateAngleX += 0.1 * upwardPose;
        leftArm1.rotateAngleX += 0.1 * upwardPose;
        rightArm1.rotateAngleZ -= 0.1 * upwardPose;
        leftArm1.rotateAngleZ += 0.1 * upwardPose;
        rightArm3.rotateAngleX += 0.2 * upwardPose;
        leftArm3.rotateAngleX += 0.2 * upwardPose;

        upperLeg1.rotateAngleX += 0.2 * upwardPose;
        upperLeg2.rotateAngleX -= 1 * upwardPose;
        lowerLeg1.rotateAngleX += 0.3 * upwardPose;
        lowerLeg2.rotateAngleX += 1.5 * upwardPose;

        walk(upperLeg1, 0.5F * globalSpeed, 0.2F * globalDegree * downwardPose, false, 0, 0, limbSwing, limbSwingAmount);
        walk(upperLeg2, 0.5F * globalSpeed, 0.2F * globalDegree * downwardPose, true, 0, 0, limbSwing, limbSwingAmount);
        walk(lowerLeg1, 0.5F * globalSpeed, 0.2F * globalDegree * downwardPose, false, -2.2F * backwardInverter, 0F, limbSwing, limbSwingAmount);
        walk(lowerLeg2, 0.5F * globalSpeed, 0.2F * globalDegree * downwardPose, true, -2.2F * backwardInverter, 0F, limbSwing, limbSwingAmount);

        waist.rotateAngleX -= 0.2 * downwardPose;
//      torsoConnector.rotateAngleX += 0.3 * downwardPose;
        torso.rotateAngleX += 0.3 * downwardPose;
        spine.rotateAngleX += 0.3 * downwardPose;
        head.rotateAngleX += 0.3 * downwardPose;
        upperLeg1.rotateAngleX -= 1.2 * downwardPose;
        upperLeg2.rotateAngleX -= 0.2 * downwardPose;
        lowerLeg1.rotateAngleX += 2 * downwardPose;
        lowerLeg2.rotateAngleX += 0.5 * downwardPose;
        rightArm1.rotateAngleZ += 1 * downwardPose;
        leftArm1.rotateAngleZ -= 1 * downwardPose;
        rightArm3.rotateAngleX -= 1 * downwardPose;
        leftArm3.rotateAngleX -= 1 * downwardPose;
    }

    @Override
    public void doPartialAnimations(EntityPlayer player, float progress, float limbSwing, float limbSwingAmount, float ticks, float rotationYaw, float rotationPitch, boolean wearingHead, boolean wearingChest, boolean wearingLegs, boolean wearingFeet)
    {
        leftArm1.rotateAngleX += MathHelper.cos(limbSwing * 0.6662F) * 1.4F * limbSwingAmount;
        rightArm1.rotateAngleX += MathHelper.cos(limbSwing * 0.6662F + PI) * 1.4F * limbSwingAmount;

        upperLeg1.rotateAngleX += MathHelper.cos(limbSwing * 0.6662F) * 1.4F * limbSwingAmount;
        upperLeg2.rotateAngleX += MathHelper.cos(limbSwing * 0.6662F + PI) * 1.4F * limbSwingAmount;

        leftWing1.rotateAngleY += Math.min(MathHelper.cos(limbSwing * 0.6662F + PI) * 1.4F * limbSwingAmount, 0);
        rightWing1.rotateAngleY += Math.max(MathHelper.cos(limbSwing * 0.6662F + PI) * 1.4F * limbSwingAmount, 0);

        if (isSneak)
        {
            if (wearingChest)
            {
                head.rotateAngleX -= 0.4F;
            }

            waist.rotateAngleX += 0.4F;
            waist.rotationPointZ += 4F;
            waist.rotationPointY -= 1;

            rightArm1.rotateAngleX -= 0.1F;
            leftArm1.rotateAngleX -= 0.1F;

            upperLeg1.rotateAngleX -= 0.5F;
            upperLeg2.rotateAngleX -= 0.5F;

            if (wearingLegs != wearingFeet)
            {
                lowerLeg1.rotationPointY -= 2;
                lowerLeg2.rotationPointY -= 2;
            }
        }
    }

    @Override
    public void doTransformationAnimations(EntityPlayer player, float progress, float limbSwing, float limbSwingAmount, float ticks, float rotationYaw, float rotationPitch, boolean wearingHead, boolean wearingChest, boolean wearingLegs, boolean wearingFeet)
    {
        ModelStarscreamVehicle vehicle = (ModelStarscreamVehicle) getTransformerModel().getVehicleModel();

        rotateTo(waist, vehicle.waist, progress);
        rotateTo(frontCrotch, vehicle.frontCrotch, progress);
        rotateTo(backCrotch, vehicle.backCrotch, progress);
        rotateTo(rightHip1, vehicle.rightHip1, progress);
        rotateTo(leftHip1, vehicle.leftHip1, progress);
        rotateTo(torso, vehicle.torso, progress);
        rotateTo(canopy1, vehicle.canopy1, progress);
        rotateTo(upperLeg1, vehicle.upperLeg1, progress);
        rotateTo(upperLeg2, vehicle.upperLeg2, progress);
        rotateTo(spine, vehicle.spine, progress);
        rotateTo(rightHip2, vehicle.rightHip2, progress);
        rotateTo(rightHip3, vehicle.rightHip3, progress);
        rotateTo(leftHip2, vehicle.leftHip2, progress);
        rotateTo(leftHip3, vehicle.leftHip3, progress);
        rotateTo(rightTorsoSide, vehicle.rightTorsoSide, progress);
        rotateTo(leftTorsoSide, vehicle.leftTorsoSide, progress);
        rotateTo(rightChest1, vehicle.rightChest1, progress);
        rotateTo(leftChest1, vehicle.leftChest1, progress);
        rotateTo(neck, vehicle.neck, progress);
        rotateTo(rightChest2, vehicle.rightChest2, progress);
        rotateTo(rightChest7, vehicle.rightChest7, progress);
        rotateTo(rightWing1, vehicle.rightWing1, progress);
        rotateTo(rightArmConnector, vehicle.rightArmConnector, progress);
        rotateTo(rightChest3, vehicle.rightChest3, progress);
        rotateTo(rightChest5, vehicle.rightChest5, progress);
        rotateTo(rightChest4, vehicle.rightChest4, progress);
        rotateTo(rightChest6, vehicle.rightChest6, progress);
        rotateTo(rightChest8, vehicle.rightChest8, progress);
        rotateTo(rightChest9, vehicle.rightChest9, progress);
        rotateTo(rightWing2, vehicle.rightWing2, progress);
        rotateTo(rightWing9, vehicle.rightWing9, progress);
        rotateTo(rightWing13, vehicle.rightWing13, progress);
        rotateTo(rightWing3, vehicle.rightWing3, progress);
        rotateTo(rightWing4, vehicle.rightWing4, progress);
        rotateTo(rightWing5, vehicle.rightWing5, progress);
        rotateTo(rightWing6, vehicle.rightWing6, progress);
        rotateTo(rightWing7, vehicle.rightWing7, progress);
        rotateTo(rightWing8, vehicle.rightWing8, progress);
        rotateTo(rightWing10, vehicle.rightWing10, progress);
        rotateTo(rightWing11, vehicle.rightWing11, progress);
        rotateTo(rightWing12, vehicle.rightWing12, progress);
        rotateTo(rightWing14, vehicle.rightWing14, progress);
        rotateTo(rightWing15, vehicle.rightWing15, progress);
        rotateTo(rightWing16, vehicle.rightWing16, progress);
        rotateTo(rightArm1, vehicle.rightArm1, progress);
        rotateTo(rightArm2, vehicle.rightArm2, progress);
        rotateTo(rightArm5, vehicle.rightArm5, progress);
        rotateTo(rightGun1, vehicle.rightGun1, progress);
        rotateTo(rightArm3, vehicle.rightArm3, progress);
        rotateTo(rightArm4, vehicle.rightArm4, progress);
        rotateTo(rightGun2, vehicle.rightGun2, progress);
        rotateTo(rightGun3, vehicle.rightGun3, progress);
        rotateTo(rightGun4, vehicle.rightGun4, progress);
        rotateTo(rightGun7, vehicle.rightGun7, progress);
        rotateTo(rightGun5, vehicle.rightGun5, progress);
        rotateTo(rightGun6, vehicle.rightGun6, progress);
        rotateTo(rightGun8, vehicle.rightGun8, progress);
        rotateTo(rightGun9, vehicle.rightGun9, progress);
        rotateTo(rightGun10, vehicle.rightGun10, progress);
        rotateTo(rightGun11, vehicle.rightGun11, progress);
        rotateTo(leftChest2, vehicle.leftChest2, progress);
        rotateTo(leftChest7, vehicle.leftChest7, progress);
        rotateTo(leftWing1, vehicle.leftWing1, progress);
        rotateTo(leftArmConnector, vehicle.leftArmConnector, progress);
        rotateTo(leftChest3, vehicle.leftChest3, progress);
        rotateTo(leftChest5, vehicle.leftChest5, progress);
        rotateTo(leftChest4, vehicle.leftChest4, progress);
        rotateTo(leftChest6, vehicle.leftChest6, progress);
        rotateTo(leftChest8, vehicle.leftChest8, progress);
        rotateTo(leftChest9, vehicle.leftChest9, progress);
        rotateTo(leftWing2, vehicle.leftWing2, progress);
        rotateTo(leftWing9, vehicle.leftWing9, progress);
        rotateTo(leftWing13, vehicle.leftWing13, progress);
        rotateTo(leftWing3, vehicle.leftWing3, progress);
        rotateTo(leftWing4, vehicle.leftWing4, progress);
        rotateTo(leftWing5, vehicle.leftWing5, progress);
        rotateTo(leftWing6, vehicle.leftWing6, progress);
        rotateTo(leftWing7, vehicle.leftWing7, progress);
        rotateTo(leftWing8, vehicle.leftWing8, progress);
        rotateTo(leftWing10, vehicle.leftWing10, progress);
        rotateTo(leftWing11, vehicle.leftWing11, progress);
        rotateTo(leftWing12, vehicle.leftWing12, progress);
        rotateTo(leftWing14, vehicle.leftWing14, progress);
        rotateTo(leftWing15, vehicle.leftWing15, progress);
        rotateTo(leftWing16, vehicle.leftWing16, progress);
        rotateTo(leftArm1, vehicle.leftArm1, progress);
        rotateTo(leftArm2, vehicle.leftArm2, progress);
        rotateTo(leftArm5, vehicle.leftArm5, progress);
        rotateTo(leftGun1, vehicle.leftGun1, progress);
        rotateTo(leftArm3, vehicle.leftArm3, progress);
        rotateTo(leftArm4, vehicle.leftArm4, progress);
        rotateTo(leftGun2, vehicle.leftGun2, progress);
        rotateTo(leftGun3, vehicle.leftGun3, progress);
        rotateTo(leftGun4, vehicle.leftGun4, progress);
        rotateTo(leftGun7, vehicle.leftGun7, progress);
        rotateTo(leftGun5, vehicle.leftGun5, progress);
        rotateTo(leftGun6, vehicle.leftGun6, progress);
        rotateTo(leftGun8, vehicle.leftGun8, progress);
        rotateTo(leftGun9, vehicle.leftGun9, progress);
        rotateTo(leftGun10, vehicle.leftGun10, progress);
        rotateTo(leftGun11, vehicle.leftGun11, progress);
        rotateTo(headConnector, vehicle.headConnector, progress);
        rotateTo(head, vehicle.head, progress);
        rotateTo(headPiece1, vehicle.headPiece1, progress);
        rotateTo(chin, vehicle.chin, progress);
        rotateTo(rightHelmet1, vehicle.rightHelmet1, progress);
        rotateTo(rightHelmet1_1, vehicle.rightHelmet1_1, progress);
        rotateTo(nose1, vehicle.nose1, progress);
        rotateTo(headPiece2, vehicle.headPiece2, progress);
        rotateTo(headPiece3, vehicle.headPiece3, progress);
        rotateTo(headPiece4, vehicle.headPiece4, progress);
        rotateTo(headPiece5, vehicle.headPiece5, progress);
        rotateTo(rightHelmet2, vehicle.rightHelmet2, progress);
        rotateTo(rightHelmet3, vehicle.rightHelmet3, progress);
        rotateTo(rightHelmet7, vehicle.rightHelmet7, progress);
        rotateTo(rightHelmet8, vehicle.rightHelmet8, progress);
        rotateTo(rightHelmet4, vehicle.rightHelmet4, progress);
        rotateTo(rightHelmet5, vehicle.rightHelmet5, progress);
        rotateTo(rightHelmet6, vehicle.rightHelmet6, progress);
        rotateTo(rightHelmet9, vehicle.rightHelmet9, progress);
        rotateTo(rightHelmet2_1, vehicle.rightHelmet2_1, progress);
        rotateTo(rightHelmet3_1, vehicle.rightHelmet3_1, progress);
        rotateTo(rightHelmet7_1, vehicle.rightHelmet7_1, progress);
        rotateTo(rightHelmet8_1, vehicle.rightHelmet8_1, progress);
        rotateTo(rightHelmet4_1, vehicle.rightHelmet4_1, progress);
        rotateTo(rightHelmet5_1, vehicle.rightHelmet5_1, progress);
        rotateTo(rightHelmet6_1, vehicle.rightHelmet6_1, progress);
        rotateTo(rightHelmet9_1, vehicle.rightHelmet9_1, progress);
        rotateTo(nose2, vehicle.nose2, progress);
        rotateTo(canopy2, vehicle.canopy2, progress);
        rotateTo(canopy3, vehicle.canopy3, progress);
        rotateTo(canopy6, vehicle.canopy6, progress);
        rotateTo(canopy20, vehicle.canopy20, progress);
        rotateTo(canopy4, vehicle.canopy4, progress);
        rotateTo(canopy5, vehicle.canopy5, progress);
        rotateTo(canopy7, vehicle.canopy7, progress);
        rotateTo(canopy12, vehicle.canopy12, progress);
        rotateTo(canopy14, vehicle.canopy14, progress);
        rotateTo(canopy16, vehicle.canopy16, progress);
        rotateTo(canopy18, vehicle.canopy18, progress);
        rotateTo(canopy8, vehicle.canopy8, progress);
        rotateTo(canopy11, vehicle.canopy11, progress);
        rotateTo(canopy9, vehicle.canopy9, progress);
        rotateTo(canopy10, vehicle.canopy10, progress);
        rotateTo(canopy13, vehicle.canopy13, progress);
        rotateTo(canopy15, vehicle.canopy15, progress);
        rotateTo(canopy17, vehicle.canopy17, progress);
        rotateTo(canopy19, vehicle.canopy19, progress);
        rotateTo(backUpperLeg1, vehicle.backUpperLeg1, progress);
        rotateTo(lowerLeg1, vehicle.lowerLeg1, progress);
        rotateTo(upperBackLeg1, vehicle.upperBackLeg1, progress);
        rotateTo(lowerBackLeg1, vehicle.lowerBackLeg1, progress);
        rotateTo(footThruster1, vehicle.footThruster1, progress);
        rotateTo(rightKnee1, vehicle.rightKnee1, progress);
        rotateTo(rightLowerLeg1, vehicle.rightLowerLeg1, progress);
        rotateTo(leftLowerLeg1, vehicle.leftLowerLeg1, progress);
        rotateTo(lowerLegPanel1, vehicle.lowerLegPanel1, progress);
        rotateTo(footBase1, vehicle.footBase1, progress);
        rotateTo(rightFin1_1, vehicle.rightFin1_1, progress);
        rotateTo(rightFin2_1, vehicle.rightFin2_1, progress);
        rotateTo(rightFin1_2, vehicle.rightFin1_2, progress);
        rotateTo(rightFin1_5, vehicle.rightFin1_5, progress);
        rotateTo(rightFin1_3, vehicle.rightFin1_3, progress);
        rotateTo(rightFin1_4, vehicle.rightFin1_4, progress);
        rotateTo(rightFin1_6, vehicle.rightFin1_6, progress);
        rotateTo(rightFin1_7, vehicle.rightFin1_7, progress);
        rotateTo(rightFin1_8, vehicle.rightFin1_8, progress);
        rotateTo(rightFin1_9, vehicle.rightFin1_9, progress);
        rotateTo(rightFin1_10, vehicle.rightFin1_10, progress);
        rotateTo(rightFin2_2, vehicle.rightFin2_2, progress);
        rotateTo(rightFin2_5, vehicle.rightFin2_5, progress);
        rotateTo(rightFin2_3, vehicle.rightFin2_3, progress);
        rotateTo(rightFin2_4, vehicle.rightFin2_4, progress);
        rotateTo(rightFin2_6, vehicle.rightFin2_6, progress);
        rotateTo(rightFin2_7, vehicle.rightFin2_7, progress);
        rotateTo(rightFin2_8, vehicle.rightFin2_8, progress);
        rotateTo(rightFin2_9, vehicle.rightFin2_9, progress);
        rotateTo(rightFin2_10, vehicle.rightFin2_10, progress);
        rotateTo(rightKnee2, vehicle.rightKnee2, progress);
        rotateTo(rightKnee3, vehicle.rightKnee3, progress);
        rotateTo(upperFoot1, vehicle.upperFoot1, progress);
        rotateTo(lowerFoot1, vehicle.lowerFoot1, progress);
        rotateTo(backUpperLeg2, vehicle.backUpperLeg2, progress);
        rotateTo(lowerLeg2, vehicle.lowerLeg2, progress);
        rotateTo(upperBackLeg2, vehicle.upperBackLeg2, progress);
        rotateTo(lowerBackLeg2, vehicle.lowerBackLeg2, progress);
        rotateTo(footThruster2, vehicle.footThruster2, progress);
        rotateTo(leftKnee1, vehicle.leftKnee1, progress);
        rotateTo(rightLowerLeg2, vehicle.rightLowerLeg2, progress);
        rotateTo(leftLowerLeg2, vehicle.leftLowerLeg2, progress);
        rotateTo(lowerLegPanel2, vehicle.lowerLegPanel2, progress);
        rotateTo(footBase2, vehicle.footBase2, progress);
        rotateTo(leftFin1_1, vehicle.leftFin1_1, progress);
        rotateTo(leftFin2_1, vehicle.leftFin2_1, progress);
        rotateTo(leftFin1_2, vehicle.leftFin1_2, progress);
        rotateTo(leftFin1_5, vehicle.leftFin1_5, progress);
        rotateTo(leftFin1_3, vehicle.leftFin1_3, progress);
        rotateTo(leftFin1_4, vehicle.leftFin1_4, progress);
        rotateTo(leftFin1_6, vehicle.leftFin1_6, progress);
        rotateTo(leftFin1_7, vehicle.leftFin1_7, progress);
        rotateTo(leftFin1_8, vehicle.leftFin1_8, progress);
        rotateTo(leftFin1_9, vehicle.leftFin1_9, progress);
        rotateTo(leftFin1_10, vehicle.leftFin1_10, progress);
        rotateTo(leftFin2_2, vehicle.leftFin2_2, progress);
        rotateTo(leftFin2_5, vehicle.leftFin2_5, progress);
        rotateTo(leftFin2_3, vehicle.leftFin2_3, progress);
        rotateTo(leftFin2_4, vehicle.leftFin2_4, progress);
        rotateTo(leftFin2_6, vehicle.leftFin2_6, progress);
        rotateTo(leftFin2_7, vehicle.leftFin2_7, progress);
        rotateTo(leftFin2_8, vehicle.leftFin2_8, progress);
        rotateTo(leftFin2_9, vehicle.leftFin2_9, progress);
        rotateTo(leftFin2_10, vehicle.leftFin2_10, progress);
        rotateTo(leftKnee2, vehicle.leftKnee2, progress);
        rotateTo(leftKnee3, vehicle.leftKnee3, progress);
        rotateTo(upperFoot2, vehicle.upperFoot2, progress);
        rotateTo(lowerFoot2, vehicle.lowerFoot2, progress);
    }

    @Override
    public void renderArmorPiece(int armorPiece)
    {
        setToInitPose();

        if (armorPiece == 0)
        {
            GL11.glTranslatef(0, 0.0625F, -0.0625F);
            GL11.glRotatef(4, 1, 0, 0);
            head.render(0.0625F);
        }
        else if (armorPiece == 1)
        {
            GL11.glTranslatef(0, 0, 0.0625F);
            upperLeg1.showModel = false;
            upperLeg2.showModel = false;
            head.showModel = false;
            waist.render(0.0625F);
            upperLeg1.showModel = true;
            upperLeg2.showModel = true;
            head.showModel = true;
        }
        else if (armorPiece == 2)
        {
            footBase1.showModel = false;
            footBase2.showModel = false;
            upperLeg1.render(0.0625F);
            upperLeg2.render(0.0625F);
            footBase1.showModel = true;
            footBase2.showModel = true;
        }
        else if (armorPiece == 3)
        {
            footBase1.rotationPointX -= 3;
            footBase2.rotationPointX += 3;
            footBase1.rotateAngleX += 0.2F;
            footBase1.rotateAngleY += 0.2F;
            footBase2.rotateAngleX += 0.2F;
            footBase2.rotateAngleY -= 0.2F;
            footBase1.render(0.0625F);
            footBase2.render(0.0625F);
        }
    }
}
